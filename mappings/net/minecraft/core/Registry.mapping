CLASS gr net/minecraft/core/Registry
	FIELD A POSITION_SOURCE_TYPE_REGISTRY Lwo;
	FIELD B STAT_TYPE_REGISTRY Lwo;
	FIELD C VILLAGER_TYPE_REGISTRY Lwo;
	FIELD D VILLAGER_PROFESSION_REGISTRY Lwo;
	FIELD E POINT_OF_INTEREST_TYPE_REGISTRY Lwo;
	FIELD F MEMORY_MODULE_TYPE_REGISTRY Lwo;
	FIELD G SENSOR_TYPE_REGISTRY Lwo;
	FIELD H SCHEDULE_REGISTRY Lwo;
	FIELD I ACTIVITY_REGISTRY Lwo;
	FIELD J LOOT_ENTRY_REGISTRY Lwo;
	FIELD K LOOT_FUNCTION_REGISTRY Lwo;
	FIELD L LOOT_ITEM_REGISTRY Lwo;
	FIELD M LOOT_NUMBER_PROVIDER_REGISTRY Lwo;
	FIELD N LOOT_NBT_PROVIDER_REGISTRY Lwo;
	FIELD O LOOT_SCORE_PROVIDER_REGISTRY Lwo;
	FIELD P DIMENSION_TYPE_REGISTRY Lwo;
	FIELD Q DIMENSION_REGISTRY Lwo;
	FIELD R LEVEL_STEM_REGISTRY Lwo;
	FIELD S GAME_EVENT Lgf;
	FIELD T SOUND_EVENT Lgr;
	FIELD U FLUID Lgf;
	FIELD V MOB_EFFECT Lgr;
	FIELD W BLOCK Lgf;
	FIELD X ENCHANTMENT Lgr;
	FIELD Y ENTITY_TYPE Lgf;
	FIELD Z ITEM Lgf;
	FIELD aA LOOT_SCORE_PROVIDER_TYPE Lgr;
	FIELD aB FLOAT_PROVIDER_TYPE_REGISTRY Lwo;
	FIELD aC FLOAT_PROVIDER_TYPES Lgr;
	FIELD aD INT_PROVIDER_TYPE_REGISTRY Lwo;
	FIELD aE INT_PROVIDER_TYPES Lgr;
	FIELD aF HEIGHT_PROVIDER_TYPE_REGISTRY Lwo;
	FIELD aG HEIGHT_PROVIDER_TYPES Lgr;
	FIELD aH NOISE_GENERATOR_SETTINGS_REGISTRY Lwo;
	FIELD aI CONFIGURED_SURFACE_BUILDER_REGISTRY Lwo;
	FIELD aJ CONFIGURED_CARVER_REGISTRY Lwo;
	FIELD aK CONFIGURED_FEATURE_REGISTRY Lwo;
	FIELD aL CONFIGURED_STRUCTURE_FEATURE_REGISTRY Lwo;
	FIELD a LOADERS Ljava/util/Map;
	FIELD aM PROCESSOR_LIST_REGISTRY Lwo;
	FIELD aN TEMPLATE_POOL_REGISTRY Lwo;
	FIELD aO BIOME_REGISTRY Lwo;
	FIELD aP SURFACE_BUILDER_REGISTRY Lwo;
	FIELD aQ SURFACE_BUILDER Lgr;
	FIELD aR CARVER_REGISTRY Lwo;
	FIELD aS CARVER Lgr;
	FIELD aT FEATURE_REGISTRY Lwo;
	FIELD aU FEATURE Lgr;
	FIELD aV STRUCTURE_FEATURE_REGISTRY Lwo;
	FIELD aW STRUCTURE_FEATURE Lgr;
	FIELD aX STRUCTURE_PIECE_REGISTRY Lwo;
	FIELD aY STRUCTURE_PIECE Lgr;
	FIELD aZ DECORATOR_REGISTRY Lwo;
	FIELD aa POTION Lgf;
	FIELD ab PARTICLE_TYPE Lgr;
	FIELD ac BLOCK_ENTITY_TYPE Lgr;
	FIELD ad MOTIVE Lgf;
	FIELD ae CUSTOM_STAT Lgr;
	FIELD af CHUNK_STATUS Lgf;
	FIELD ag RULE_TEST Lgr;
	FIELD ah POS_RULE_TEST Lgr;
	FIELD ai MENU Lgr;
	FIELD aj RECIPE_TYPE Lgr;
	FIELD ak RECIPE_SERIALIZER Lgr;
	FIELD al ATTRIBUTE Lgr;
	FIELD am POSITION_SOURCE_TYPE Lgr;
	FIELD an STAT_TYPE Lgr;
	FIELD ao VILLAGER_TYPE Lgf;
	FIELD ap VILLAGER_PROFESSION Lgf;
	FIELD aq POINT_OF_INTEREST_TYPE Lgf;
	FIELD ar MEMORY_MODULE_TYPE Lgf;
	FIELD as SENSOR_TYPE Lgf;
	FIELD at SCHEDULE Lgr;
	FIELD au ACTIVITY Lgr;
	FIELD av LOOT_POOL_ENTRY_TYPE Lgr;
	FIELD aw LOOT_FUNCTION_TYPE Lgr;
	FIELD ax LOOT_CONDITION_TYPE Lgr;
	FIELD ay LOOT_NUMBER_PROVIDER_TYPE Lgr;
	FIELD az LOOT_NBT_PROVIDER_TYPE Lgr;
	FIELD b key Lwo;
	FIELD ba DECORATOR Lgr;
	FIELD bb BLOCK_STATE_PROVIDER_TYPE_REGISTRY Lwo;
	FIELD bc BLOCK_PLACER_TYPE_REGISTRY Lwo;
	FIELD bd FOLIAGE_PLACER_TYPE_REGISTRY Lwo;
	FIELD be TRUNK_PLACER_TYPE_REGISTRY Lwo;
	FIELD bf TREE_DECORATOR_TYPE_REGISTRY Lwo;
	FIELD bg FEATURE_SIZE_TYPE_REGISTRY Lwo;
	FIELD bh BIOME_SOURCE_REGISTRY Lwo;
	FIELD bi CHUNK_GENERATOR_REGISTRY Lwo;
	FIELD bj STRUCTURE_PROCESSOR_REGISTRY Lwo;
	FIELD bk STRUCTURE_POOL_ELEMENT_REGISTRY Lwo;
	FIELD bl BLOCKSTATE_PROVIDER_TYPES Lgr;
	FIELD bm BLOCK_PLACER_TYPES Lgr;
	FIELD bn FOLIAGE_PLACER_TYPES Lgr;
	FIELD bo TRUNK_PLACER_TYPES Lgr;
	FIELD bp TREE_DECORATOR_TYPES Lgr;
	FIELD bq FEATURE_SIZE_TYPES Lgr;
	FIELD br BIOME_SOURCE Lgr;
	FIELD bs CHUNK_GENERATOR Lgr;
	FIELD bt STRUCTURE_PROCESSOR Lgr;
	FIELD bu STRUCTURE_POOL_ELEMENT Lgr;
	FIELD bv lifecycle Lcom/mojang/serialization/Lifecycle;
	FIELD c LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD d ROOT_REGISTRY_NAME Lwp;
	FIELD e WRITABLE_REGISTRY Lgx;
	FIELD f REGISTRY Lgr;
	FIELD g SOUND_EVENT_REGISTRY Lwo;
	FIELD h FLUID_REGISTRY Lwo;
	FIELD i MOB_EFFECT_REGISTRY Lwo;
	FIELD j BLOCK_REGISTRY Lwo;
	FIELD k ENCHANTMENT_REGISTRY Lwo;
	FIELD l ENTITY_TYPE_REGISTRY Lwo;
	FIELD m ITEM_REGISTRY Lwo;
	FIELD n POTION_REGISTRY Lwo;
	FIELD o PARTICLE_TYPE_REGISTRY Lwo;
	FIELD p BLOCK_ENTITY_TYPE_REGISTRY Lwo;
	FIELD q MOTIVE_REGISTRY Lwo;
	FIELD r CUSTOM_STAT_REGISTRY Lwo;
	FIELD s CHUNK_STATUS_REGISTRY Lwo;
	FIELD t RULE_TEST_REGISTRY Lwo;
	FIELD u POS_RULE_TEST_REGISTRY Lwo;
	FIELD v MENU_REGISTRY Lwo;
	FIELD w RECIPE_TYPE_REGISTRY Lwo;
	FIELD x RECIPE_SERIALIZER_REGISTRY Lwo;
	FIELD y ATTRIBUTE_REGISTRY Lwo;
	FIELD z GAME_EVENT_REGISTRY Lwo;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lwo;Lcom/mojang/serialization/Lifecycle;)V
	METHOD A lambda$static$32 ()Ldkz;
	METHOD B lambda$static$31 ()Ldkg;
	METHOD C lambda$static$30 ()Ldiz;
	METHOD D lambda$static$29 ()Ldig;
	METHOD E lambda$static$28 ()Lbko;
	METHOD F lambda$static$27 ()Lbkq;
	METHOD G lambda$static$26 ()Lbbw;
	METHOD H lambda$static$25 ()Lbav;
	METHOD I lambda$static$24 ()Lbcr;
	METHOD J lambda$static$23 ()Lbiv;
	METHOD K lambda$static$22 ()Lbix;
	METHOD L lambda$static$21 ()Laff;
	METHOD M lambda$static$20 ()Lcny;
	METHOD N lambda$static$19 ()Latt;
	METHOD O lambda$static$18 ()Lbsl;
	METHOD P lambda$static$17 ()Lbsm;
	METHOD Q lambda$static$16 ()Lbmp;
	METHOD R lambda$static$15 ()Ldbg;
	METHOD S lambda$static$14 ()Ldbm;
	METHOD T lambda$static$13 ()Lclo;
	METHOD U lambda$static$12 ()Lwp;
	METHOD V lambda$static$11 ()Lbga;
	METHOD W lambda$static$10 ()Lchr;
	METHOD X lambda$static$9 ()Lhp;
	METHOD Y lambda$static$8 ()Lbrm;
	METHOD Z lambda$static$7 ()Lbpn;
	METHOD a lambda$static$53 ()Lcwu;
	METHOD a lambda$decode$58 (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;
	METHOD a lambda$decode$57 (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;
	METHOD a lambda$keys$59 (Lcom/mojang/serialization/DynamicOps;Lwp;)Ljava/lang/Object;
	METHOD a registerMapping (Lgr;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	METHOD a register (Lgr;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	METHOD a register (Lgr;Lwp;Ljava/lang/Object;)Ljava/lang/Object;
	METHOD a checkRegistry (Lgx;)V
	METHOD a lambda$checkRegistry$55 (Lgx;Lgx;)V
	METHOD a lambda$decode$56 (Ljava/lang/Number;)Lcom/mojang/serialization/DataResult;
	METHOD a getId (Ljava/lang/Object;)I
	METHOD a createRegistryKey (Ljava/lang/String;)Lwo;
	METHOD a getRandom (Ljava/util/Random;)Ljava/lang/Object;
	METHOD a get (Lwo;)Ljava/lang/Object;
	METHOD a registerSimple (Lwo;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lgr;
	METHOD a internalRegister (Lwo;Lgx;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lgx;
	METHOD a registerDefaulted (Lwo;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lgf;
	METHOD a registerDefaulted (Lwo;Ljava/lang/String;Ljava/util/function/Supplier;)Lgf;
	METHOD a registerSimple (Lwo;Ljava/util/function/Supplier;)Lgr;
	METHOD a get (Lwp;)Ljava/lang/Object;
	METHOD a lambda$static$54 (Lwp;Ljava/util/function/Supplier;)V
	METHOD aa lambda$static$6 ()Lasp;
	METHOD ab lambda$static$5 ()Lbtl;
	METHOD ac lambda$static$4 ()Lbyq;
	METHOD ad lambda$static$3 ()Lasd;
	METHOD ae lambda$static$2 ()Lddp;
	METHOD af lambda$static$1 ()Laev;
	METHOD ag lambda$static$0 ()Lcnt;
	METHOD b elementsLifecycle ()Lcom/mojang/serialization/Lifecycle;
	METHOD b getKey (Ljava/lang/Object;)Lwp;
	METHOD b containsKey (Lwo;)Z
	METHOD b getOptional (Lwp;)Ljava/util/Optional;
	METHOD c keySet ()Ljava/util/Set;
	METHOD c getResourceKey (Ljava/lang/Object;)Ljava/util/Optional;
	METHOD c getOptional (Lwo;)Ljava/util/Optional;
	METHOD c containsKey (Lwp;)Z
	METHOD d entrySet ()Ljava/util/Set;
	METHOD d lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;
	METHOD d getOrThrow (Lwo;)Ljava/lang/Object;
	METHOD decode decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;
	METHOD e lambda$static$52 ()Ldbr;
	METHOD encode encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;
	METHOD f key ()Lwo;
	METHOD g stream ()Ljava/util/stream/Stream;
	METHOD h lambda$static$51 ()Lcom/mojang/serialization/Codec;
	METHOD i lambda$static$50 ()Lcom/mojang/serialization/Codec;
	METHOD j lambda$static$49 ()Lcvl;
	METHOD k lambda$static$48 ()Lcxc;
	METHOD keys keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream;
	METHOD l lambda$static$47 ()Lcxn;
	METHOD m lambda$static$46 ()Lcvv;
	METHOD n lambda$static$45 ()Lctk;
	METHOD o lambda$static$44 ()Lcwe;
	METHOD p lambda$static$43 ()Lcyt;
	METHOD q lambda$static$42 ()Lcsw;
	METHOD r lambda$static$41 ()Lcsv;
	METHOD s lambda$static$40 ()Lcqy;
	METHOD t lambda$static$39 ()Lcpr;
	METHOD toString toString ()Ljava/lang/String;
	METHOD u lambda$static$38 ()Ldck;
	METHOD v lambda$static$37 ()Lcxv;
	METHOD w lambda$static$36 ()Laqp;
	METHOD x lambda$static$35 ()Laqn;
	METHOD y lambda$static$34 ()Ldlh;
	METHOD z lambda$static$33 ()Ldks;
