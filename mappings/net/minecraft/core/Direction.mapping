CLASS fp net/minecraft/core/Direction
	FIELD a DOWN Lfp;
	FIELD b UP Lfp;
	FIELD c NORTH Lfp;
	FIELD d SOUTH Lfp;
	FIELD e WEST Lfp;
	FIELD f EAST Lfp;
	FIELD g data3d I
	FIELD h oppositeIndex I
	FIELD i data2d I
	FIELD j name Ljava/lang/String;
	FIELD k axis Lfp$a;
	FIELD l axisDirection Lfp$b;
	FIELD m normal Lgg;
	FIELD n VALUES [Lfp;
	FIELD o BY_NAME Ljava/util/Map;
	FIELD p BY_3D_DATA [Lfp;
	FIELD q BY_2D_DATA [Lfp;
	FIELD r BY_NORMAL Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;
	FIELD s $VALUES [Lfp;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Ljava/lang/String;IIIILjava/lang/String;Lfp$b;Lfp$a;Lgg;)V
	METHOD a getRotation ()Lc;
	METHOD a fromYRot (D)Lfp;
	METHOD a getNearest (DDD)Lfp;
	METHOD a getNearest (FFF)Lfp;
	METHOD a from3DDataValue (I)Lfp;
	METHOD a fromNormal (III)Lfp;
	METHOD a orderedByNearest (Laky;)[Lfp;
	METHOD a rotate (Lb;Lfp;)Lfp;
	METHOD a fromNormal (Lfk;)Lfp;
	METHOD a getClockWise (Lfp$a;)Lfp;
	METHOD a fromAxisAndDirection (Lfp$a;Lfp$b;)Lfp;
	METHOD a get (Lfp$b;Lfp$a;)Lfp;
	METHOD a lambda$static$7 (Lfp;)Lfp;
	METHOD a lambda$static$8 (Lfp;Lfp;)Lfp;
	METHOD a makeDirectionArray (Lfp;Lfp;Lfp;)[Lfp;
	METHOD a byName (Ljava/lang/String;)Lfp;
	METHOD a getRandomFace (Ljava/util/Random;)Lfp;
	METHOD b get3DDataValue ()I
	METHOD b from2DDataValue (I)Lfp;
	METHOD b getCounterClockWise (Lfp$a;)Lfp;
	METHOD b lambda$static$6 (Lfp;)Ljava/lang/Long;
	METHOD c get2DDataValue ()I
	METHOD c lambda$static$5 (I)[Lfp;
	METHOD c lambda$static$4 (Lfp;)I
	METHOD d getAxisDirection ()Lfp$b;
	METHOD d lambda$static$2 (I)[Lfp;
	METHOD d lambda$static$3 (Lfp;)Z
	METHOD e getOpposite ()Lfp;
	METHOD e lambda$static$1 (Lfp;)I
	METHOD f getClockWise ()Lfp;
	METHOD f lambda$static$0 (Lfp;)Lfp;
	METHOD g getCounterClockWise ()Lfp;
	METHOD h getStepX ()I
	METHOD i getStepY ()I
	METHOD j getStepZ ()I
	METHOD k step ()Le;
	METHOD l getName ()Ljava/lang/String;
	METHOD m getAxis ()Lfp$a;
	METHOD n toYRot ()F
	METHOD o getSerializedName ()Ljava/lang/String;
	METHOD p getNormal ()Lgg;
	METHOD q getClockWiseX ()Lfp;
	METHOD r getCounterClockWiseX ()Lfp;
	METHOD s getClockWiseZ ()Lfp;
	METHOD t getCounterClockWiseZ ()Lfp;
	METHOD toString toString ()Ljava/lang/String;
	METHOD valueOf valueOf (Ljava/lang/String;)Lfp;
	METHOD values values ()[Lfp;
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$core$Direction [I
		FIELD b $SwitchMap$net$minecraft$core$Direction$Axis [I
		METHOD <clinit> <clinit> ()V
	CLASS a Axis
		FIELD a X Lfp$a;
		FIELD b Y Lfp$a;
		FIELD c Z Lfp$a;
		FIELD d BY_NAME Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		FIELD f $VALUES [Lfp$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;Lfp$1;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a choose (DDD)D
		METHOD a choose (III)I
		METHOD a lambda$static$0 (Lfp$a;)Lfp$a;
		METHOD a test (Lfp;)Z
		METHOD a byName (Ljava/lang/String;)Lfp$a;
		METHOD a getRandomAxis (Ljava/util/Random;)Lfp$a;
		METHOD b isVertical ()Z
		METHOD c isHorizontal ()Z
		METHOD d getPlane ()Lfp$c;
		METHOD o getSerializedName ()Ljava/lang/String;
		METHOD test test (Ljava/lang/Object;)Z
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lfp$a;
		METHOD values values ()[Lfp$a;
		CLASS 1 1
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
		CLASS 2 2
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
		CLASS 3 3
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
	CLASS b AxisDirection
		FIELD a POSITIVE Lfp$b;
		FIELD b NEGATIVE Lfp$b;
		FIELD c step I
		FIELD d name Ljava/lang/String;
		FIELD e $VALUES [Lfp$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;IILjava/lang/String;)V
		METHOD a getStep ()I
		METHOD b getName ()Ljava/lang/String;
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lfp$b;
		METHOD values values ()[Lfp$b;
	CLASS c Plane
		FIELD a HORIZONTAL Lfp$c;
		FIELD b VERTICAL Lfp$c;
		FIELD c faces [Lfp;
		FIELD d axis [Lfp$a;
		FIELD e $VALUES [Lfp$c;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I[Lfp;[Lfp$a;)V
		METHOD a test (Lfp;)Z
		METHOD a getRandomDirection (Ljava/util/Random;)Lfp;
		METHOD b getRandomAxis (Ljava/util/Random;)Lfp$a;
		METHOD iterator iterator ()Ljava/util/Iterator;
		METHOD test test (Ljava/lang/Object;)Z
		METHOD valueOf valueOf (Ljava/lang/String;)Lfp$c;
		METHOD values values ()[Lfp$c;
