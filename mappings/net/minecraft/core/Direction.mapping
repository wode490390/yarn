CLASS fb net/minecraft/core/Direction
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$core$Direction$Axis [I
		FIELD b $SwitchMap$net$minecraft$core$Direction [I
		METHOD <clinit> <clinit> ()V
	CLASS a Axis
		CLASS 1 1
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
		CLASS 2 2
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
		CLASS 3 3
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
		FIELD a X Lfb$a;
		FIELD b Y Lfb$a;
		FIELD c Z Lfb$a;
		FIELD d BY_NAME Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		FIELD f $VALUES [Lfb$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;Lfb$1;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a choose (DDD)D
		METHOD a choose (III)I
		METHOD a lambda$static$0 (Lfb$a;)Lfb$a;
		METHOD a test (Lfb;)Z
		METHOD a byName (Ljava/lang/String;)Lfb$a;
		METHOD a getRandomAxis (Ljava/util/Random;)Lfb$a;
		METHOD b isVertical ()Z
		METHOD c isHorizontal ()Z
		METHOD d getPlane ()Lfb$c;
		METHOD m getSerializedName ()Ljava/lang/String;
		METHOD test test (Ljava/lang/Object;)Z
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lfb$a;
		METHOD values values ()[Lfb$a;
	CLASS b AxisDirection
		FIELD a POSITIVE Lfb$b;
		FIELD b NEGATIVE Lfb$b;
		FIELD c step I
		FIELD d name Ljava/lang/String;
		FIELD e $VALUES [Lfb$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;IILjava/lang/String;)V
		METHOD a getStep ()I
		METHOD b getName ()Ljava/lang/String;
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lfb$b;
		METHOD values values ()[Lfb$b;
	CLASS c Plane
		FIELD a HORIZONTAL Lfb$c;
		FIELD b VERTICAL Lfb$c;
		FIELD c faces [Lfb;
		FIELD d axis [Lfb$a;
		FIELD e $VALUES [Lfb$c;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I[Lfb;[Lfb$a;)V
		METHOD a test (Lfb;)Z
		METHOD a getRandomDirection (Ljava/util/Random;)Lfb;
		METHOD b getRandomAxis (Ljava/util/Random;)Lfb$a;
		METHOD iterator iterator ()Ljava/util/Iterator;
		METHOD test test (Ljava/lang/Object;)Z
		METHOD valueOf valueOf (Ljava/lang/String;)Lfb$c;
		METHOD values values ()[Lfb$c;
	FIELD a DOWN Lfb;
	FIELD b UP Lfb;
	FIELD c NORTH Lfb;
	FIELD d SOUTH Lfb;
	FIELD e WEST Lfb;
	FIELD f EAST Lfb;
	FIELD g data3d I
	FIELD h oppositeIndex I
	FIELD i data2d I
	FIELD j name Ljava/lang/String;
	FIELD k axis Lfb$a;
	FIELD l axisDirection Lfb$b;
	FIELD m normal Lfs;
	FIELD n VALUES [Lfb;
	FIELD o BY_NAME Ljava/util/Map;
	FIELD p BY_3D_DATA [Lfb;
	FIELD q BY_2D_DATA [Lfb;
	FIELD r BY_NORMAL Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;
	FIELD s $VALUES [Lfb;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Ljava/lang/String;IIIILjava/lang/String;Lfb$b;Lfb$a;Lfs;)V
	METHOD a get3DDataValue ()I
	METHOD a fromYRot (D)Lfb;
	METHOD a getNearest (DDD)Lfb;
	METHOD a getNearest (FF)Lfb;
	METHOD a getNearest (FFF)Lfb;
	METHOD a from3DDataValue (I)Lfb;
	METHOD a fromNormal (III)Lfb;
	METHOD a orderedByNearest (Laio;)[Lfb;
	METHOD a fromNormal (Lew;)Lfb;
	METHOD a getClockWise (Lfb$a;)Lfb;
	METHOD a fromAxisAndDirection (Lfb$a;Lfb$b;)Lfb;
	METHOD a get (Lfb$b;Lfb$a;)Lfb;
	METHOD a lambda$static$7 (Lfb;)Lfb;
	METHOD a lambda$static$8 (Lfb;Lfb;)Lfb;
	METHOD a makeDirectionArray (Lfb;Lfb;Lfb;)[Lfb;
	METHOD a byName (Ljava/lang/String;)Lfb;
	METHOD a getRandomFace (Ljava/util/Random;)Lfb;
	METHOD b get2DDataValue ()I
	METHOD b from2DDataValue (I)Lfb;
	METHOD b getCounterClockWise (Lfb$a;)Lfb;
	METHOD b lambda$static$6 (Lfb;)Ljava/lang/Long;
	METHOD c getAxisDirection ()Lfb$b;
	METHOD c lambda$static$5 (I)[Lfb;
	METHOD c lambda$static$4 (Lfb;)I
	METHOD d getOpposite ()Lfb;
	METHOD d lambda$static$2 (I)[Lfb;
	METHOD d lambda$static$3 (Lfb;)Z
	METHOD e getClockWise ()Lfb;
	METHOD e lambda$static$1 (Lfb;)I
	METHOD f getCounterClockWise ()Lfb;
	METHOD f lambda$static$0 (Lfb;)Lfb;
	METHOD g getStepX ()I
	METHOD h getStepY ()I
	METHOD i getStepZ ()I
	METHOD j getName ()Ljava/lang/String;
	METHOD k getAxis ()Lfb$a;
	METHOD l toYRot ()F
	METHOD m getSerializedName ()Ljava/lang/String;
	METHOD n getNormal ()Lfs;
	METHOD o getClockWiseX ()Lfb;
	METHOD p getCounterClockWiseX ()Lfb;
	METHOD q getClockWiseZ ()Lfb;
	METHOD r getCounterClockWiseZ ()Lfb;
	METHOD toString toString ()Ljava/lang/String;
	METHOD valueOf valueOf (Ljava/lang/String;)Lfb;
	METHOD values values ()[Lfb;
