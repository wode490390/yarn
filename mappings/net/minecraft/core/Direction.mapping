CLASS gg net/minecraft/core/Direction
	FIELD a DOWN Lgg;
	FIELD b UP Lgg;
	FIELD c NORTH Lgg;
	FIELD d SOUTH Lgg;
	FIELD e WEST Lgg;
	FIELD f EAST Lgg;
	FIELD g CODEC Lcom/mojang/serialization/Codec;
	FIELD h data3d I
	FIELD i oppositeIndex I
	FIELD j data2d I
	FIELD k name Ljava/lang/String;
	FIELD l axis Lgg$a;
	FIELD m axisDirection Lgg$b;
	FIELD n normal Lgw;
	FIELD o VALUES [Lgg;
	FIELD p BY_NAME Ljava/util/Map;
	FIELD q BY_3D_DATA [Lgg;
	FIELD r BY_2D_DATA [Lgg;
	FIELD s BY_NORMAL Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;
	FIELD t $VALUES [Lgg;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Ljava/lang/String;IIIILjava/lang/String;Lgg$b;Lgg$a;Lgw;)V
	METHOD a getRotation ()Lg;
	METHOD a fromYRot (D)Lgg;
	METHOD a getNearest (DDD)Lgg;
	METHOD a isFacingAngle (F)Z
	METHOD a getNearest (FFF)Lgg;
	METHOD a from3DDataValue (I)Lgg;
	METHOD a fromNormal (III)Lgg;
	METHOD a orderedByNearest (Lasl;)[Lgg;
	METHOD a getFacingAxis (Lasl;Lgg$a;)Lgg;
	METHOD a rotate (Ld;Lgg;)Lgg;
	METHOD a fromNormal (Lgb;)Lgg;
	METHOD a getClockWise (Lgg$a;)Lgg;
	METHOD a fromAxisAndDirection (Lgg$a;Lgg$b;)Lgg;
	METHOD a get (Lgg$b;Lgg$a;)Lgg;
	METHOD a lambda$static$7 (Lgg;)Lgg;
	METHOD a lambda$static$8 (Lgg;Lgg;)Lgg;
	METHOD a makeDirectionArray (Lgg;Lgg;Lgg;)[Lgg;
	METHOD a byName (Ljava/lang/String;)Lgg;
	METHOD a getRandom (Ljava/util/Random;)Lgg;
	METHOD b get3DDataValue ()I
	METHOD b from2DDataValue (I)Lgg;
	METHOD b getCounterClockWise (Lgg$a;)Lgg;
	METHOD b lambda$static$6 (Lgg;)Ljava/lang/Long;
	METHOD c getSerializedName ()Ljava/lang/String;
	METHOD c lambda$static$5 (I)[Lgg;
	METHOD c lambda$static$4 (Lgg;)I
	METHOD d get2DDataValue ()I
	METHOD d lambda$static$2 (I)[Lgg;
	METHOD d lambda$static$3 (Lgg;)Z
	METHOD e getAxisDirection ()Lgg$b;
	METHOD e lambda$static$1 (Lgg;)I
	METHOD f getOpposite ()Lgg;
	METHOD f lambda$static$0 (Lgg;)Lgg;
	METHOD g getClockWise ()Lgg;
	METHOD h getCounterClockWise ()Lgg;
	METHOD i getStepX ()I
	METHOD j getStepY ()I
	METHOD k getStepZ ()I
	METHOD l step ()Lk;
	METHOD m getName ()Ljava/lang/String;
	METHOD n getAxis ()Lgg$a;
	METHOD o toYRot ()F
	METHOD p getNormal ()Lgw;
	METHOD q getClockWiseX ()Lgg;
	METHOD r getCounterClockWiseX ()Lgg;
	METHOD s getClockWiseZ ()Lgg;
	METHOD t getCounterClockWiseZ ()Lgg;
	METHOD toString toString ()Ljava/lang/String;
	METHOD valueOf valueOf (Ljava/lang/String;)Lgg;
	METHOD values values ()[Lgg;
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$core$Direction [I
		FIELD b $SwitchMap$net$minecraft$core$Direction$Axis [I
		METHOD <clinit> <clinit> ()V
	CLASS a Axis
		FIELD a X Lgg$a;
		FIELD b Y Lgg$a;
		FIELD c Z Lgg$a;
		FIELD d VALUES [Lgg$a;
		FIELD e CODEC Lcom/mojang/serialization/Codec;
		FIELD f BY_NAME Ljava/util/Map;
		FIELD g name Ljava/lang/String;
		FIELD h $VALUES [Lgg$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;Lgg$1;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a choose (DDD)D
		METHOD a choose (III)I
		METHOD a lambda$static$0 (Lgg$a;)Lgg$a;
		METHOD a test (Lgg;)Z
		METHOD a byName (Ljava/lang/String;)Lgg$a;
		METHOD a getRandom (Ljava/util/Random;)Lgg$a;
		METHOD b isVertical ()Z
		METHOD c getSerializedName ()Ljava/lang/String;
		METHOD d isHorizontal ()Z
		METHOD e getPlane ()Lgg$c;
		METHOD test test (Ljava/lang/Object;)Z
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lgg$a;
		METHOD values values ()[Lgg$a;
		CLASS 1 1
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
		CLASS 2 2
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
		CLASS 3 3
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
	CLASS b AxisDirection
		FIELD a POSITIVE Lgg$b;
		FIELD b NEGATIVE Lgg$b;
		FIELD c step I
		FIELD d name Ljava/lang/String;
		FIELD e $VALUES [Lgg$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;IILjava/lang/String;)V
		METHOD a getStep ()I
		METHOD b getName ()Ljava/lang/String;
		METHOD c opposite ()Lgg$b;
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lgg$b;
		METHOD values values ()[Lgg$b;
	CLASS c Plane
		FIELD a HORIZONTAL Lgg$c;
		FIELD b VERTICAL Lgg$c;
		FIELD c faces [Lgg;
		FIELD d axis [Lgg$a;
		FIELD e $VALUES [Lgg$c;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I[Lgg;[Lgg$a;)V
		METHOD a stream ()Ljava/util/stream/Stream;
		METHOD a test (Lgg;)Z
		METHOD a getRandomDirection (Ljava/util/Random;)Lgg;
		METHOD b getRandomAxis (Ljava/util/Random;)Lgg$a;
		METHOD iterator iterator ()Ljava/util/Iterator;
		METHOD test test (Ljava/lang/Object;)Z
		METHOD valueOf valueOf (Ljava/lang/String;)Lgg$c;
		METHOD values values ()[Lgg$c;
