CLASS ft net/minecraft/core/Direction
	FIELD a DOWN Lft;
	FIELD b UP Lft;
	FIELD c NORTH Lft;
	FIELD d SOUTH Lft;
	FIELD e WEST Lft;
	FIELD f EAST Lft;
	FIELD g data3d I
	FIELD h oppositeIndex I
	FIELD i data2d I
	FIELD j name Ljava/lang/String;
	FIELD k axis Lft$a;
	FIELD l axisDirection Lft$b;
	FIELD m normal Lgo;
	FIELD n VALUES [Lft;
	FIELD o BY_NAME Ljava/util/Map;
	FIELD p BY_3D_DATA [Lft;
	FIELD q BY_2D_DATA [Lft;
	FIELD r BY_NORMAL Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;
	FIELD s $VALUES [Lft;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Ljava/lang/String;IIIILjava/lang/String;Lft$b;Lft$a;Lgo;)V
	METHOD a getSerializedName ()Ljava/lang/String;
	METHOD a fromYRot (D)Lft;
	METHOD a getNearest (DDD)Lft;
	METHOD a getNearest (FFF)Lft;
	METHOD a from3DDataValue (I)Lft;
	METHOD a fromNormal (III)Lft;
	METHOD a orderedByNearest (Lanb;)[Lft;
	METHOD a rotate (Lb;Lft;)Lft;
	METHOD a fromNormal (Lfo;)Lft;
	METHOD a getClockWise (Lft$a;)Lft;
	METHOD a fromAxisAndDirection (Lft$a;Lft$b;)Lft;
	METHOD a get (Lft$b;Lft$a;)Lft;
	METHOD a lambda$static$7 (Lft;)Lft;
	METHOD a lambda$static$8 (Lft;Lft;)Lft;
	METHOD a makeDirectionArray (Lft;Lft;Lft;)[Lft;
	METHOD a byName (Ljava/lang/String;)Lft;
	METHOD a getRandomFace (Ljava/util/Random;)Lft;
	METHOD b getRotation ()Ld;
	METHOD b from2DDataValue (I)Lft;
	METHOD b getCounterClockWise (Lft$a;)Lft;
	METHOD b lambda$static$6 (Lft;)Ljava/lang/Long;
	METHOD c get3DDataValue ()I
	METHOD c lambda$static$5 (I)[Lft;
	METHOD c lambda$static$4 (Lft;)I
	METHOD d get2DDataValue ()I
	METHOD d lambda$static$2 (I)[Lft;
	METHOD d lambda$static$3 (Lft;)Z
	METHOD e getAxisDirection ()Lft$b;
	METHOD e lambda$static$1 (Lft;)I
	METHOD f getOpposite ()Lft;
	METHOD f lambda$static$0 (Lft;)Lft;
	METHOD g getClockWise ()Lft;
	METHOD h getCounterClockWise ()Lft;
	METHOD i getStepX ()I
	METHOD j getStepY ()I
	METHOD k getStepZ ()I
	METHOD l step ()Lg;
	METHOD m getName ()Ljava/lang/String;
	METHOD n getAxis ()Lft$a;
	METHOD o toYRot ()F
	METHOD p getNormal ()Lgo;
	METHOD q getClockWiseX ()Lft;
	METHOD r getCounterClockWiseX ()Lft;
	METHOD s getClockWiseZ ()Lft;
	METHOD t getCounterClockWiseZ ()Lft;
	METHOD toString toString ()Ljava/lang/String;
	METHOD valueOf valueOf (Ljava/lang/String;)Lft;
	METHOD values values ()[Lft;
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$core$Direction [I
		FIELD b $SwitchMap$net$minecraft$core$Direction$Axis [I
		METHOD <clinit> <clinit> ()V
	CLASS a Axis
		FIELD a X Lft$a;
		FIELD b Y Lft$a;
		FIELD c Z Lft$a;
		FIELD d BY_NAME Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		FIELD f $VALUES [Lft$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;Lft$1;)V
		METHOD a getSerializedName ()Ljava/lang/String;
		METHOD a choose (DDD)D
		METHOD a choose (III)I
		METHOD a lambda$static$0 (Lft$a;)Lft$a;
		METHOD a test (Lft;)Z
		METHOD a byName (Ljava/lang/String;)Lft$a;
		METHOD a getRandomAxis (Ljava/util/Random;)Lft$a;
		METHOD b getName ()Ljava/lang/String;
		METHOD c isVertical ()Z
		METHOD d isHorizontal ()Z
		METHOD e getPlane ()Lft$c;
		METHOD test test (Ljava/lang/Object;)Z
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lft$a;
		METHOD values values ()[Lft$a;
		CLASS 1 1
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
		CLASS 2 2
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
		CLASS 3 3
			METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
			METHOD a choose (DDD)D
			METHOD a choose (III)I
			METHOD test test (Ljava/lang/Object;)Z
	CLASS b AxisDirection
		FIELD a POSITIVE Lft$b;
		FIELD b NEGATIVE Lft$b;
		FIELD c step I
		FIELD d name Ljava/lang/String;
		FIELD e $VALUES [Lft$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;IILjava/lang/String;)V
		METHOD a getStep ()I
		METHOD b getName ()Ljava/lang/String;
		METHOD c opposite ()Lft$b;
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lft$b;
		METHOD values values ()[Lft$b;
	CLASS c Plane
		FIELD a HORIZONTAL Lft$c;
		FIELD b VERTICAL Lft$c;
		FIELD c faces [Lft;
		FIELD d axis [Lft$a;
		FIELD e $VALUES [Lft$c;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I[Lft;[Lft$a;)V
		METHOD a test (Lft;)Z
		METHOD a getRandomDirection (Ljava/util/Random;)Lft;
		METHOD b getRandomAxis (Ljava/util/Random;)Lft$a;
		METHOD iterator iterator ()Ljava/util/Iterator;
		METHOD test test (Ljava/lang/Object;)Z
		METHOD valueOf valueOf (Ljava/lang/String;)Lft$c;
		METHOD values values ()[Lft$c;
