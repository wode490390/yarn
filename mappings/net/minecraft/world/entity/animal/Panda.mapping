CLASS bdm net/minecraft/world/entity/animal/Panda
	FIELD bV TOTAL_ROLL_STEPS I
	FIELD bW rollCounter I
	FIELD bY UNHAPPY_COUNTER Lvy;
	FIELD bZ SNEEZE_COUNTER Lvy;
	FIELD ca EAT_COUNTER Lvy;
	FIELD cb MAIN_GENE_ID Lvy;
	FIELD cc HIDDEN_GENE_ID Lvy;
	FIELD cd DATA_ID_FLAGS Lvy;
	FIELD ce BREED_TARGETING Lbcb;
	FIELD cf FLAG_SNEEZE I
	FIELD cg FLAG_ROLL I
	FIELD ch FLAG_SIT I
	FIELD ci FLAG_ON_BACK I
	FIELD cj EAT_TICK_INTERVAL I
	FIELD ck TOTAL_UNHAPPY_TIME I
	FIELD cl gotBamboo Z
	FIELD cm didBite Z
	FIELD cn rollDelta Ldly;
	FIELD co sitAmount F
	FIELD cp sitAmountO F
	FIELD cq onBackAmount F
	FIELD cr onBackAmountO F
	FIELD cs rollAmount F
	FIELD ct rollAmountO F
	FIELD cu lookAtPlayerGoal Lbdm$g;
	FIELD cv PANDA_ITEMS Ljava/util/function/Predicate;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lasp;Lbvr;)V
	METHOD B doHurtTarget (Lasl;)Z
	METHOD a getBreedOffspring (Labj;Lasj;)Lasj;
	METHOD a hurt (Larv;F)Z
	METHOD a setMainGene (Lbdm$a;)V
	METHOD a access$100 (Lbdm;)Z
	METHOD a setGeneFromParents (Lbdm;Lbdm;)V
	METHOD a canBeLeashed (Lbjf;)Z
	METHOD a finalizeSpawn (Lbwf;Lare;Latb;Latp;Lmv;)Latp;
	METHOD a readAdditionalSaveData (Lmv;)V
	METHOD b setHiddenGene (Lbdm$a;)V
	METHOD b access$200 (Lbdm;)Ljava/util/Random;
	METHOD b pickUpItem (Lbge;)V
	METHOD b mobInteract (Lbjf;Larf;)Larg;
	METHOD b playStepSound (Lgb;Lcjr;)V
	METHOD b addAdditionalSaveData (Lmv;)V
	METHOD c getHurtSound (Larv;)Laev;
	METHOD c access$300 (Lbdm;)Ljava/util/Random;
	METHOD c lambda$static$0 (Lbge;)Z
	METHOD d setFlag (IZ)V
	METHOD d access$400 (Lbdm;)Ljava/util/Random;
	METHOD e defineSynchedData ()V
	METHOD e access$500 (Lbdm;)Ljava/util/Random;
	METHOD e canTakeItem (Lbpr;)Z
	METHOD f access$700 (Lbdm;)Lbdm$g;
	METHOD fA getVariant ()Lbdm$a;
	METHOD fB isLazy ()Z
	METHOD fC isWorried ()Z
	METHOD fD isPlayful ()Z
	METHOD fE isBrown ()Z
	METHOD fF isWeak ()Z
	METHOD fG isScared ()Z
	METHOD fH setAttributes ()V
	METHOD fI canPerformAction ()Z
	METHOD fJ access$600 ()Lbcb;
	METHOD fK access$800 ()Ljava/util/function/Predicate;
	METHOD fL getEatCounter ()I
	METHOD fM handleEating ()V
	METHOD fN addEatingParticles ()V
	METHOD fO updateSitAmount ()V
	METHOD fP updateOnBackAnimation ()V
	METHOD fQ updateRollAmount ()V
	METHOD fR handleRoll ()V
	METHOD fS afterSneeze ()V
	METHOD fT getOneOfGenesRandomly ()Lbdm$a;
	METHOD fU tryToSit ()V
	METHOD fi isAggressive ()Z
	METHOD fn isSitting ()Z
	METHOD fo isOnBack ()Z
	METHOD fp isEating ()Z
	METHOD fv getSneezeCounter ()I
	METHOD fw getMainGene ()Lbdm$a;
	METHOD fx getHiddenGene ()Lbdm$a;
	METHOD fy isRolling ()Z
	METHOD fz createAttributes ()Latx$a;
	METHOD g access$900 (Lbdm;)Ljava/util/Random;
	METHOD h access$1000 (Lbdm;)Ljava/util/Random;
	METHOD i access$1100 (Lbdm;)V
	METHOD j tick ()V
	METHOD j access$1200 (Lbdm;)Ljava/util/Random;
	METHOD k access$1300 (Lbdm;)Ljava/util/Random;
	METHOD k isFoodOrCake (Lbpr;)Z
	METHOD l access$1400 (Lbdm;)Ljava/util/Random;
	METHOD l isFood (Lbpr;)Z
	METHOD m access$1500 (Lbdm;)Ljava/util/Random;
	METHOD n access$1600 (Lbdm;)Ljava/util/Random;
	METHOD o getUnhappyCounter ()I
	METHOD o access$1700 (Lbdm;)Z
	METHOD p getAmbientSound ()Laev;
	METHOD p access$1800 (Lbdm;)Z
	METHOD q getDeathSound ()Laev;
	METHOD s isSneezing ()Z
	METHOD u registerGoals ()V
	METHOD u setUnhappyCounter (I)V
	METHOD v setSneezeCounter (I)V
	METHOD v sit (Z)V
	METHOD w setEatCounter (I)V
	METHOD w setOnBack (Z)V
	METHOD x getSitAmount (F)F
	METHOD x getFlag (I)Z
	METHOD x eat (Z)V
	METHOD y getLieOnBackAmount (F)F
	METHOD y sneeze (Z)V
	METHOD z getRollAmount (F)F
	METHOD z roll (Z)V
	CLASS a Gene
		FIELD a NORMAL Lbdm$a;
		FIELD b LAZY Lbdm$a;
		FIELD c WORRIED Lbdm$a;
		FIELD d PLAYFUL Lbdm$a;
		FIELD e BROWN Lbdm$a;
		FIELD f WEAK Lbdm$a;
		FIELD g AGGRESSIVE Lbdm$a;
		FIELD h BY_ID [Lbdm$a;
		FIELD i MAX_GENE I
		FIELD j id I
		FIELD k name Ljava/lang/String;
		FIELD l isRecessive Z
		FIELD m $VALUES [Lbdm$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;IILjava/lang/String;Z)V
		METHOD a getId ()I
		METHOD a byId (I)Lbdm$a;
		METHOD a access$000 (Lbdm$a;Lbdm$a;)Lbdm$a;
		METHOD a byName (Ljava/lang/String;)Lbdm$a;
		METHOD a getRandom (Ljava/util/Random;)Lbdm$a;
		METHOD b getName ()Ljava/lang/String;
		METHOD b lambda$static$0 (I)[Lbdm$a;
		METHOD b getVariantFromGenes (Lbdm$a;Lbdm$a;)Lbdm$a;
		METHOD c isRecessive ()Z
		METHOD valueOf valueOf (Ljava/lang/String;)Lbdm$a;
		METHOD values values ()[Lbdm$a;
	CLASS b PandaAttackGoal
		FIELD b panda Lbdm;
		METHOD <init> <init> (Lbdm;DZ)V
		METHOD a canUse ()Z
	CLASS c PandaAvoidGoal
		FIELD i panda Lbdm;
		METHOD <init> <init> (Lbdm;Ljava/lang/Class;FDD)V
		METHOD a canUse ()Z
	CLASS d PandaBreedGoal
		FIELD d this$0 Lbdm;
		FIELD e panda Lbdm;
		FIELD f unhappyCooldown I
		METHOD <init> <init> (Lbdm;Lbdm;D)V
		METHOD a canUse ()Z
		METHOD h canFindBamboo ()Z
	CLASS e PandaHurtByTargetGoal
		FIELD a panda Lbdm;
		METHOD <init> <init> (Lbdm;[Ljava/lang/Class;)V
		METHOD a alertOther (Lasz;Lasy;)V
		METHOD b canContinueToUse ()Z
	CLASS f PandaLieOnBackGoal
		FIELD a panda Lbdm;
		FIELD b cooldown I
		METHOD <init> <init> (Lbdm;)V
		METHOD a canUse ()Z
		METHOD b canContinueToUse ()Z
		METHOD c start ()V
		METHOD d stop ()V
	CLASS g PandaLookAtPlayerGoal
		FIELD g panda Lbdm;
		METHOD <init> <init> (Lbdm;Ljava/lang/Class;F)V
		METHOD a canUse ()Z
		METHOD a setTarget (Lasy;)V
		METHOD b canContinueToUse ()Z
		METHOD b lambda$canUse$0 (Lasy;)Z
		METHOD e tick ()V
	CLASS h PandaMoveControl
		FIELD l panda Lbdm;
		METHOD <init> <init> (Lbdm;)V
		METHOD a tick ()V
	CLASS i PandaPanicGoal
		FIELD g panda Lbdm;
		METHOD <init> <init> (Lbdm;D)V
		METHOD a canUse ()Z
		METHOD b canContinueToUse ()Z
	CLASS j PandaRollGoal
		FIELD a panda Lbdm;
		METHOD <init> <init> (Lbdm;)V
		METHOD E_ isInterruptable ()Z
		METHOD a canUse ()Z
		METHOD b canContinueToUse ()Z
		METHOD c start ()V
	CLASS k PandaSitGoal
		FIELD a this$0 Lbdm;
		FIELD b cooldown I
		METHOD <init> <init> (Lbdm;)V
		METHOD a canUse ()Z
		METHOD b canContinueToUse ()Z
		METHOD c start ()V
		METHOD d stop ()V
		METHOD e tick ()V
	CLASS l PandaSneezeGoal
		FIELD a panda Lbdm;
		METHOD <init> <init> (Lbdm;)V
		METHOD a canUse ()Z
		METHOD b canContinueToUse ()Z
		METHOD c start ()V
