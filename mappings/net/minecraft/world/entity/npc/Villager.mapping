CLASS bis net/minecraft/world/entity/npc/Villager
	FIELD bX BREEDING_FOOD_THRESHOLD I
	FIELD bY FOOD_POINTS Ljava/util/Map;
	FIELD bZ SPEED_MODIFIER F
	FIELD ca POI_MEMORIES Ljava/util/Map;
	FIELD cb DATA_VILLAGER_DATA Lvy;
	FIELD cc TRADES_PER_LEVEL I
	FIELD cd WANTED_ITEMS Ljava/util/Set;
	FIELD ce MAX_GOSSIP_TOPICS I
	FIELD cf GOSSIP_COOLDOWN I
	FIELD cg GOSSIP_DECAY_INTERVAL I
	FIELD ch REPUTATION_CHANGE_PER_EVENT I
	FIELD ci HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS I
	FIELD cj HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM I
	FIELD ck TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING J
	FIELD cl updateMerchantTimer I
	FIELD cm increaseProfessionLevelOnUpdate Z
	FIELD cn lastTradedPlayer Lbjf;
	FIELD co chasing Z
	FIELD cp foodLevel B
	FIELD cq gossips Lbar;
	FIELD cr lastGossipTime J
	FIELD cs lastGossipDecayTime J
	FIELD ct villagerXp I
	FIELD cu lastRestockGameTime J
	FIELD cv numberOfRestocksToday I
	FIELD cw lastRestockCheckDayTime J
	FIELD cx assignProfessionWhenSpawned Z
	FIELD cy MEMORY_TYPES Lcom/google/common/collect/ImmutableList;
	FIELD cz SENSOR_TYPES Lcom/google/common/collect/ImmutableList;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lasp;Lbvr;)V
	METHOD <init> <init> (Lasp;Lbvr;Lbix;)V
	METHOD Q sendDebugPackets ()V
	METHOD a handleEntityEvent (B)V
	METHOD a wantsToSpawnGolem (J)Z
	METHOD a lambda$spawnGolemIfNeeded$10 (JLbis;)Z
	METHOD a spawnGolemIfNeeded (Labj;JI)V
	METHOD a getBreedOffspring (Labj;Lasj;)Lasj;
	METHOD a lambda$tellWitnessesThatIWasMurdered$6 (Labj;Lasl;Lasy;)V
	METHOD a thunderHit (Labj;Lasx;)V
	METHOD a gossip (Labj;Lbis;J)V
	METHOD a lambda$countFoodPointsInInventory$9 (Larl;Ljava/util/Map$Entry;)I
	METHOD a die (Larv;)V
	METHOD a tellWitnessesThatIWasMurdered (Lasl;)V
	METHOD a setLastHurtByMob (Lasy;)V
	METHOD a registerBrainGoals (Lats;)V
	METHOD a lambda$getPlayerReputation$8 (Lbas;)Z
	METHOD a releasePoi (Lbav;)V
	METHOD a onReputationEventFrom (Lbcl;Lasl;)V
	METHOD a lambda$static$3 (Lbis;Lbcr;)Z
	METHOD a setVillagerData (Lbit;)V
	METHOD a finalizeSpawn (Lbwf;Lare;Latb;Latp;Lmv;)Latp;
	METHOD a makeBrain (Lcom/mojang/serialization/Dynamic;)Lats;
	METHOD a findSpawnPositionForGolemInColumn (Lgb;DD)Lgb;
	METHOD a readAdditionalSaveData (Lmv;)V
	METHOD a lambda$addAdditionalSaveData$4 (Lmv;Lnn;)V
	METHOD a lambda$releasePoi$7 (Lnet/minecraft/server/MinecraftServer;Lbav;Lgj;)V
	METHOD a setGossips (Lnn;)V
	METHOD b golemSpawnConditionsMet (J)Z
	METHOD b getBreedOffspring (Labj;Lasj;)Lbis;
	METHOD b pickUpItem (Lbge;)V
	METHOD b lambda$static$2 (Lbis;Lbcr;)Z
	METHOD b mobInteract (Lbjf;Larf;)Larg;
	METHOD b rewardTradeXp (Lbuo;)V
	METHOD b setOffers (Lbup;)V
	METHOD b startSleeping (Lgb;)V
	METHOD b addAdditionalSaveData (Lmv;)V
	METHOD bT getTypeName ()Lon;
	METHOD c refreshBrain (Labj;)V
	METHOD c getHurtSound (Larv;)Laev;
	METHOD c lambda$static$1 (Lbis;Lbcr;)Z
	METHOD d trySpawnGolem (Labj;)Lbdj;
	METHOD d lambda$static$0 (Lbis;Lbcr;)Z
	METHOD dg getBrain ()Lats;
	METHOD dh brainProvider ()Lats$b;
	METHOD e defineSynchedData ()V
	METHOD eN stopSleeping ()V
	METHOD eP customServerAiStep ()V
	METHOD f canBreed ()Z
	METHOD f setTradingPlayer (Lbjf;)V
	METHOD fA assignProfessionWhenSpawned ()Z
	METHOD fB canRestock ()Z
	METHOD fC restock ()V
	METHOD fD shouldRestock ()Z
	METHOD fE playWorkSound ()V
	METHOD fF isChasing ()Z
	METHOD fG eatAndDigestFood ()V
	METHOD fH hasExcessFood ()Z
	METHOD fI wantsMoreFood ()Z
	METHOD fJ hasFarmSeeds ()Z
	METHOD fK getGossips ()Lbar;
	METHOD fL setUnhappy ()V
	METHOD fM resetSpecialPrices ()V
	METHOD fN needsToRestock ()Z
	METHOD fO allowedToRestock ()Z
	METHOD fP catchUpDemand ()V
	METHOD fQ updateDemand ()V
	METHOD fR releaseAllPois ()V
	METHOD fS hungry ()Z
	METHOD fT eatUntilFull ()V
	METHOD fU shouldIncreaseLevel ()Z
	METHOD fV increaseMerchantCareer ()V
	METHOD fW countFoodPointsInInventory ()I
	METHOD fX maybeDecayGossip ()V
	METHOD fY resetNumberOfRestocks ()V
	METHOD ft stopTrading ()V
	METHOD fw updateTrades ()V
	METHOD fy getVillagerData ()Lbit;
	METHOD fz createAttributes ()Latx$a;
	METHOD g getPlayerReputation (Lbjf;)I
	METHOD h removeWhenFarAway (D)Z
	METHOD h startTrading (Lbjf;)V
	METHOD i updateSpecialPrices (Lbjf;)V
	METHOD j tick ()V
	METHOD j lambda$tellWitnessesThatIWasMurdered$5 (Lasy;)Z
	METHOD j wantsToPickUp (Lbpr;)Z
	METHOD m ageBoundaryReached ()V
	METHOD p getAmbientSound ()Laev;
	METHOD q getDeathSound ()Laev;
	METHOD s getVillagerXp ()I
	METHOD v setVillagerXp (I)V
	METHOD w digestFood (I)V
	METHOD w setChasing (Z)V
