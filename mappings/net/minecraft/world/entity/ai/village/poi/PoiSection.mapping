CLASS bcq net/minecraft/world/entity/ai/village/poi/PoiSection
	FIELD a LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD b records Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;
	FIELD c byType Ljava/util/Map;
	FIELD d setDirty Ljava/lang/Runnable;
	FIELD e isValid Z
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Ljava/lang/Runnable;)V
	METHOD <init> <init> (Ljava/lang/Runnable;ZLjava/util/List;)V
	METHOD a isValid ()Z
	METHOD a add (Lbcp;)Z
	METHOD a lambda$null$1 (Lbcq;)Ljava/util/List;
	METHOD a lambda$add$8 (Lbcr;)Ljava/util/Set;
	METHOD a remove (Lgb;)V
	METHOD a add (Lgb;Lbcr;)V
	METHOD a lambda$null$9 (Lgb;Lbcr;I)Lbcp;
	METHOD a exists (Lgb;Ljava/util/function/Predicate;)Z
	METHOD a lambda$refresh$10 (Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lgb;Lbcr;)V
	METHOD a codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;
	METHOD a lambda$codec$2 (Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;
	METHOD a lambda$getRecords$5 (Ljava/util/Map$Entry;)Ljava/util/stream/Stream;
	METHOD a refresh (Ljava/util/function/Consumer;)V
	METHOD a getRecords (Ljava/util/function/Predicate;Lbco$b;)Ljava/util/stream/Stream;
	METHOD a lambda$getRecords$4 (Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z
	METHOD b clear ()V
	METHOD b lambda$null$0 (Lbcq;)Ljava/lang/Boolean;
	METHOD b lambda$add$6 (Lbcr;)Ljava/lang/Object;
	METHOD b getFreeTickets (Lgb;)I
	METHOD b lambda$codec$3 (Ljava/lang/Runnable;)Lbcq;
	METHOD c release (Lgb;)Z
	METHOD d getType (Lgb;)Ljava/util/Optional;
	METHOD e getPoiRecord (Lgb;)Ljava/util/Optional;
	METHOD f lambda$add$7 (Lgb;)Ljava/lang/Object;
