CLASS awf net/minecraft/world/entity/ai/village/poi/PoiSection
	FIELD a LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD b records Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;
	FIELD c byType Ljava/util/Map;
	FIELD d setDirty Ljava/lang/Runnable;
	FIELD e isValid Z
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Ljava/lang/Runnable;)V
	METHOD <init> <init> (Ljava/lang/Runnable;Lcom/mojang/datafixers/Dynamic;)V
	METHOD a isValid ()Z
	METHOD a add (Lawe;)Z
	METHOD a lambda$add$5 (Lawg;)Ljava/util/Set;
	METHOD a serialize (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object;
	METHOD a lambda$serialize$6 (Lcom/mojang/datafixers/types/DynamicOps;Lawe;)Ljava/lang/Object;
	METHOD a remove (Lfo;)V
	METHOD a add (Lfo;Lawg;)V
	METHOD a lambda$null$7 (Lfo;Lawg;I)Lawe;
	METHOD a exists (Lfo;Ljava/util/function/Predicate;)Z
	METHOD a lambda$refresh$8 (Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lfo;Lawg;)V
	METHOD a lambda$new$0 (Ljava/lang/Runnable;Lcom/mojang/datafixers/Dynamic;)V
	METHOD a lambda$getRecords$2 (Ljava/util/Map$Entry;)Ljava/util/stream/Stream;
	METHOD a refresh (Ljava/util/function/Consumer;)V
	METHOD a getRecords (Ljava/util/function/Predicate;Lawd$b;)Ljava/util/stream/Stream;
	METHOD a lambda$getRecords$1 (Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z
	METHOD b clear ()V
	METHOD b lambda$add$3 (Lawg;)Ljava/lang/Object;
	METHOD b getFreeTickets (Lfo;)I
	METHOD c release (Lfo;)Z
	METHOD d getType (Lfo;)Ljava/util/Optional;
	METHOD e lambda$add$4 (Lfo;)Ljava/lang/Object;
