CLASS bhi net/minecraft/world/entity/monster/Slime
	FIELD b MIN_SIZE I
	FIELD bV oSquish F
	FIELD bW ID_SIZE Lvy;
	FIELD bX wasOnGround Z
	FIELD c MAX_SIZE I
	FIELD d targetSquish F
	FIELD e squish F
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lasp;Lbvr;)V
	METHOD M getDefaultLootTable ()Lwp;
	METHOD P shouldDespawnInPeaceful ()Z
	METHOD X getType ()Lasp;
	METHOD a setSize (IZ)V
	METHOD a remove (Lasl$c;)V
	METHOD a getDimensions (Latj;)Lasm;
	METHOD a access$000 (Lbhi;)F
	METHOD a finalizeSpawn (Lbwf;Lare;Latb;Latp;Lmv;)Latp;
	METHOD a readAdditionalSaveData (Lmv;)V
	METHOD a onSyncedDataUpdated (Lvy;)V
	METHOD a_ playerTouch (Lbjf;)V
	METHOD b getStandingEyeHeight (Latj;Lasm;)F
	METHOD b access$100 (Lbhi;)Z
	METHOD b addAdditionalSaveData (Lmv;)V
	METHOD c getHurtSound (Larv;)Laev;
	METHOD c checkSlimeSpawnRules (Lasp;Lbvs;Latb;Lgb;Ljava/util/Random;)Z
	METHOD e defineSynchedData ()V
	METHOD eQ getMaxHeadXRot ()I
	METHOD eg getSoundVolume ()F
	METHOD ek jumpFromGround ()V
	METHOD fl decreaseSquish ()V
	METHOD fm isDealsDamage ()Z
	METHOD fn getAttackDamage ()F
	METHOD fo getSquishSound ()Laev;
	METHOD fp getJumpSound ()Laev;
	METHOD fq getSize ()I
	METHOD fr isTiny ()Z
	METHOD fs doPlayJumpSound ()Z
	METHOD i push (Lasl;)V
	METHOD j tick ()V
	METHOD j dealDamage (Lasy;)V
	METHOD k lambda$registerGoals$0 (Lasy;)Z
	METHOD m getSoundPitch ()F
	METHOD o getParticleType ()Lho;
	METHOD q getDeathSound ()Laev;
	METHOD s getJumpDelay ()I
	METHOD u registerGoals ()V
	METHOD z_ refreshDimensions ()V
	CLASS a SlimeAttackGoal
		FIELD a slime Lbhi;
		FIELD b growTiredTimer I
		METHOD <init> <init> (Lbhi;)V
		METHOD a canUse ()Z
		METHOD b canContinueToUse ()Z
		METHOD c start ()V
		METHOD e tick ()V
	CLASS b SlimeFloatGoal
		FIELD a slime Lbhi;
		METHOD <init> <init> (Lbhi;)V
		METHOD a canUse ()Z
		METHOD e tick ()V
	CLASS c SlimeKeepOnJumpingGoal
		FIELD a slime Lbhi;
		METHOD <init> <init> (Lbhi;)V
		METHOD a canUse ()Z
		METHOD e tick ()V
	CLASS d SlimeMoveControl
		FIELD l yRot F
		FIELD m jumpDelay I
		FIELD n slime Lbhi;
		FIELD o isAggressive Z
		METHOD <init> <init> (Lbhi;)V
		METHOD a tick ()V
		METHOD a setWantedMovement (D)V
		METHOD a setDirection (FZ)V
	CLASS e SlimeRandomDirectionGoal
		FIELD a slime Lbhi;
		FIELD b chosenDegrees F
		FIELD c nextRandomizeTime I
		METHOD <init> <init> (Lbhi;)V
		METHOD a canUse ()Z
		METHOD e tick ()V
