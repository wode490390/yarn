CLASS bar net/minecraft/world/entity/monster/Slime
	FIELD b targetSquish F
	FIELD bv ID_SIZE Lth;
	FIELD bw wasOnGround Z
	FIELD c squish F
	FIELD d oSquish F
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lanf;Lbnx;)V
	METHOD J getDefaultLootTable ()Lts;
	METHOD L shouldDespawnInPeaceful ()Z
	METHOD U getType ()Lanf;
	METHOD a setSize (IZ)V
	METHOD a getDimensions (Lanw;)Lanc;
	METHOD a access$000 (Lbar;)F
	METHOD a finalizeSpawn (Lbny;Lalt;Lanp;Lanz;Lkz;)Lanz;
	METHOD a readAdditionalSaveData (Lkz;)V
	METHOD a onSyncedDataUpdated (Lth;)V
	METHOD aa remove ()V
	METHOD b getStandingEyeHeight (Lanw;Lanc;)F
	METHOD b access$100 (Lbar;)Z
	METHOD b playerTouch (Lbch;)V
	METHOD b addAdditionalSaveData (Lkz;)V
	METHOD c checkSlimeSpawnRules (Lanf;Lbny;Lanp;Lfo;Ljava/util/Random;)Z
	METHOD cF registerAttributes ()V
	METHOD dd getDeathSound ()Labr;
	METHOD dt getSoundVolume ()F
	METHOD dx jumpFromGround ()V
	METHOD e getHurtSound (Laml;)Labr;
	METHOD eA getSquishSound ()Labr;
	METHOD eB getJumpSound ()Labr;
	METHOD eC getSize ()I
	METHOD eD isTiny ()Z
	METHOD eE doPlayJumpSound ()Z
	METHOD eF getSoundPitch ()F
	METHOD ed getMaxHeadXRot ()I
	METHOD ex decreaseSquish ()V
	METHOD ey isDealsDamage ()Z
	METHOD ez getAttackDamage ()F
	METHOD h tick ()V
	METHOD i push (Lanb;)V
	METHOD j dealDamage (Lanm;)V
	METHOD k getParticleType ()Lhb;
	METHOD k lambda$registerGoals$0 (Lanm;)Z
	METHOD m getJumpDelay ()I
	METHOD o registerGoals ()V
	METHOD w_ defineSynchedData ()V
	METHOD z_ refreshDimensions ()V
	CLASS a SlimeAttackGoal
		FIELD a slime Lbar;
		FIELD b growTiredTimer I
		METHOD <init> <init> (Lbar;)V
		METHOD a canUse ()Z
		METHOD b canContinueToUse ()Z
		METHOD c start ()V
		METHOD e tick ()V
	CLASS b SlimeFloatGoal
		FIELD a slime Lbar;
		METHOD <init> <init> (Lbar;)V
		METHOD a canUse ()Z
		METHOD e tick ()V
	CLASS c SlimeKeepOnJumpingGoal
		FIELD a slime Lbar;
		METHOD <init> <init> (Lbar;)V
		METHOD a canUse ()Z
		METHOD e tick ()V
	CLASS d SlimeMoveControl
		FIELD i yRot F
		FIELD j jumpDelay I
		FIELD k slime Lbar;
		FIELD l isAggressive Z
		METHOD <init> <init> (Lbar;)V
		METHOD a tick ()V
		METHOD a setWantedMovement (D)V
		METHOD a setDirection (FZ)V
	CLASS e SlimeRandomDirectionGoal
		FIELD a slime Lbar;
		FIELD b chosenDegrees F
		FIELD c nextRandomizeTime I
		METHOD <init> <init> (Lbar;)V
		METHOD a canUse ()Z
		METHOD e tick ()V
