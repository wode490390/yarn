CLASS azh net/minecraft/world/entity/fishing/FishingHook
	FIELD an life I
	FIELD ao owner Lbch;
	FIELD ap flightTime I
	FIELD aq nibble I
	FIELD ar timeUntilLured I
	FIELD as timeUntilHooked I
	FIELD at fishAngle F
	FIELD au openWater Z
	FIELD av currentState Lazh$a;
	FIELD aw luck I
	FIELD ax lureSpeed I
	FIELD b hookedIn Lanb;
	FIELD c syncronizedRandom Ljava/util/Random;
	FIELD d biting Z
	FIELD e outOfWaterTime I
	FIELD f DATA_HOOKED_ENTITY Lth;
	FIELD g DATA_BITING Lth;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lbch;Lbnx;II)V
	METHOD <init> <init> (Lbnx;Lbch;DDD)V
	METHOD <init> <init> (Lbnx;Lbch;II)V
	METHOD O getAddEntityPacket ()Lmz;
	METHOD a handleEntityEvent (B)V
	METHOD a shouldRenderAtSqrDistance (D)Z
	METHOD a lerpTo (DDDFFIZ)V
	METHOD a canBeHooked (Lanb;)Z
	METHOD a lambda$getOpenWaterTypeForArea$0 (Lazh$b;Lazh$b;)Lazh$b;
	METHOD a catchingFish (Lfo;)V
	METHOD a getOpenWaterTypeForArea (Lfo;Lfo;)Lazh$b;
	METHOD a readAdditionalSaveData (Lkz;)V
	METHOD a onSyncedDataUpdated (Lth;)V
	METHOD aa remove ()V
	METHOD ax isMovementNoisy ()Z
	METHOD b retrieve (Lbin;)I
	METHOD b calculateOpenWater (Lfo;)Z
	METHOD b addAdditionalSaveData (Lkz;)V
	METHOD bI canChangeDimensions ()Z
	METHOD c getOpenWaterTypeForBlock (Lfo;)Lazh$b;
	METHOD f isOpenWaterFishing ()Z
	METHOD h tick ()V
	METHOD i bringInHookedEntity ()V
	METHOD k getOwner ()Lbch;
	METHOD l shouldStopFishing ()Z
	METHOD m updateRotation ()V
	METHOD n checkCollision ()V
	METHOD o setHookedEntity ()V
	METHOD w_ defineSynchedData ()V
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$world$entity$fishing$FishingHook$OpenWaterType [I
		METHOD <clinit> <clinit> ()V
	CLASS a FishHookState
		FIELD a FLYING Lazh$a;
		FIELD b HOOKED_IN_ENTITY Lazh$a;
		FIELD c BOBBING Lazh$a;
		FIELD d $VALUES [Lazh$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I)V
		METHOD valueOf valueOf (Ljava/lang/String;)Lazh$a;
		METHOD values values ()[Lazh$a;
	CLASS b OpenWaterType
		FIELD a ABOVE_WATER Lazh$b;
		FIELD b INSIDE_WATER Lazh$b;
		FIELD c INVALID Lazh$b;
		FIELD d $VALUES [Lazh$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I)V
		METHOD valueOf valueOf (Ljava/lang/String;)Lazh$b;
		METHOD values values ()[Lazh$b;
