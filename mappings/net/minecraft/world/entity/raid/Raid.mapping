CLASS bkk net/minecraft/world/entity/raid/Raid
	FIELD A groupToLeaderMap Ljava/util/Map;
	FIELD B groupRaiderMap Ljava/util/Map;
	FIELD C heroesOfTheVillage Ljava/util/Set;
	FIELD D ticksActive J
	FIELD E center Lgb;
	FIELD F level Labj;
	FIELD G started Z
	FIELD H id I
	FIELD I totalHealth F
	FIELD J badOmenLevel I
	FIELD K active Z
	FIELD L groupsSpawned I
	FIELD M raidEvent Labg;
	FIELD N postRaidTicks I
	FIELD O raidCooldownTicks I
	FIELD P random Ljava/util/Random;
	FIELD Q numGroups I
	FIELD R status Lbkk$a;
	FIELD S celebrationTicks I
	FIELD T waveSpawnPos Ljava/util/Optional;
	FIELD a VILLAGE_RADIUS_BUFFER I
	FIELD b MAX_NO_ACTION_TIME I
	FIELD c MAX_CELEBRATION_TICKS I
	FIELD d TICKS_PER_DAY I
	FIELD e DEFAULT_MAX_BAD_OMEN_LEVEL I
	FIELD f VALID_RAID_RADIUS_SQR I
	FIELD g RAID_REMOVAL_THRESHOLD_SQR I
	FIELD h SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER I
	FIELD i ATTEMPT_RAID_FARTHEST I
	FIELD j ATTEMPT_RAID_CLOSE I
	FIELD k ATTEMPT_RAID_INSIDE I
	FIELD l VILLAGE_SEARCH_RADIUS I
	FIELD m RAID_TIMEOUT_TICKS I
	FIELD n NUM_SPAWN_ATTEMPTS I
	FIELD o OMINOUS_BANNER_PATTERN_NAME Ljava/lang/String;
	FIELD p RAIDERS_REMAINING Ljava/lang/String;
	FIELD q POST_RAID_TICK_LIMIT I
	FIELD r DEFAULT_PRE_RAID_TICKS I
	FIELD s OUTSIDE_RAID_BOUNDS_TIMEOUT I
	FIELD t LOW_MOB_THRESHOLD I
	FIELD u RAID_NAME_COMPONENT Lon;
	FIELD v VICTORY Lon;
	FIELD w DEFEAT Lon;
	FIELD x RAID_BAR_VICTORY_COMPONENT Lon;
	FIELD y RAID_BAR_DEFEAT_COMPONENT Lon;
	FIELD z HERO_OF_THE_VILLAGE_DURATION I
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (ILabj;Lgb;)V
	METHOD <init> <init> (Labj;Lmv;)V
	METHOD A hasMoreWaves ()Z
	METHOD B isFinalWave ()Z
	METHOD C hasBonusWave ()Z
	METHOD D hasSpawnedBonusWave ()Z
	METHOD E shouldSpawnBonusGroup ()Z
	METHOD F updateRaiders ()V
	METHOD G shouldSpawnGroup ()Z
	METHOD H setDirty ()V
	METHOD a isOver ()Z
	METHOD a setBadOmenLevel (I)V
	METHOD a findRandomSpawnPos (II)Lgb;
	METHOD a setLeader (ILbkl;)V
	METHOD a joinRaid (ILbkl;Lgb;Z)V
	METHOD a addWaveMob (ILbkl;Z)Z
	METHOD a lambda$validPlayer$0 (Labk;)Z
	METHOD a getNumGroups (Lard;)I
	METHOD a addHeroOfTheVillage (Lasl;)V
	METHOD a absorbBadOmen (Lbjf;)V
	METHOD a getDefaultNumSpawns (Lbkk$b;IZ)I
	METHOD a getPotentialBonusSpawns (Lbkk$b;Ljava/util/Random;ILare;Z)I
	METHOD a removeFromRaid (Lbkl;Z)V
	METHOD a playSound (Lgb;)V
	METHOD a lambda$addWaveMob$2 (Ljava/lang/Integer;)Ljava/util/Set;
	METHOD a save (Lmv;)Lmv;
	METHOD b isBetweenWaves ()Z
	METHOD b getLeader (I)Lbkl;
	METHOD b addWaveMob (ILbkl;)Z
	METHOD b spawnGroup (Lgb;)V
	METHOD c hasFirstWaveSpawned ()Z
	METHOD c removeLeader (I)V
	METHOD c setCenter (Lgb;)V
	METHOD d isStopped ()Z
	METHOD d getValidSpawnPos (I)Ljava/util/Optional;
	METHOD d lambda$moveRaidCenterToNearbyVillageSection$1 (Lgb;)D
	METHOD e isVictory ()Z
	METHOD f isLoss ()Z
	METHOD g getTotalHealth ()F
	METHOD h getAllRaiders ()Ljava/util/Set;
	METHOD i getLevel ()Lbvr;
	METHOD j isStarted ()Z
	METHOD k getGroupsSpawned ()I
	METHOD l getMaxBadOmenLevel ()I
	METHOD m getBadOmenLevel ()I
	METHOD n stop ()V
	METHOD o tick ()V
	METHOD p updateBossbar ()V
	METHOD q getHealthOfLivingRaiders ()F
	METHOD r getTotalRaidersAlive ()I
	METHOD s getLeaderBannerInstance ()Lbpr;
	METHOD t getCenter ()Lgb;
	METHOD u getId ()I
	METHOD v isActive ()Z
	METHOD w getEnchantOdds ()F
	METHOD x validPlayer ()Ljava/util/function/Predicate;
	METHOD y updatePlayers ()V
	METHOD z moveRaidCenterToNearbyVillageSection ()V
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$world$entity$raid$Raid$RaiderType [I
		FIELD b $SwitchMap$net$minecraft$world$Difficulty [I
		METHOD <clinit> <clinit> ()V
	CLASS a RaidStatus
		FIELD a ONGOING Lbkk$a;
		FIELD b VICTORY Lbkk$a;
		FIELD c LOSS Lbkk$a;
		FIELD d STOPPED Lbkk$a;
		FIELD e VALUES [Lbkk$a;
		FIELD f $VALUES [Lbkk$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a access$000 (Ljava/lang/String;)Lbkk$a;
		METHOD b getByName (Ljava/lang/String;)Lbkk$a;
		METHOD valueOf valueOf (Ljava/lang/String;)Lbkk$a;
		METHOD values values ()[Lbkk$a;
	CLASS b RaiderType
		FIELD a VINDICATOR Lbkk$b;
		FIELD b EVOKER Lbkk$b;
		FIELD c PILLAGER Lbkk$b;
		FIELD d WITCH Lbkk$b;
		FIELD e RAVAGER Lbkk$b;
		FIELD f VALUES [Lbkk$b;
		FIELD g entityType Lasp;
		FIELD h spawnsPerWaveBeforeBonus [I
		FIELD i $VALUES [Lbkk$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILasp;[I)V
		METHOD a access$100 ()[Lbkk$b;
		METHOD a access$200 (Lbkk$b;)Lasp;
		METHOD b access$300 (Lbkk$b;)[I
		METHOD valueOf valueOf (Ljava/lang/String;)Lbkk$b;
		METHOD values values ()[Lbkk$b;
