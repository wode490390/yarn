CLASS bdx net/minecraft/world/entity/vehicle/Boat
	FIELD aA inputUp Z
	FIELD aB inputDown Z
	FIELD aC waterLevel D
	FIELD aD landFriction F
	FIELD aE status Lbdx$a;
	FIELD aF oldStatus Lbdx$a;
	FIELD aG lastYd D
	FIELD aH isAboveBubbleColumn Z
	FIELD aI bubbleColumnDirectionIsDown Z
	FIELD aJ bubbleMultiplier F
	FIELD aK bubbleAngle F
	FIELD aL bubbleAngleO F
	FIELD an DATA_ID_BUBBLE_TIME Lth;
	FIELD ao paddlePositions [F
	FIELD ap invFriction F
	FIELD aq outOfControlTicks F
	FIELD ar deltaRotation F
	FIELD as lerpSteps I
	FIELD at lerpX D
	FIELD au lerpY D
	FIELD av lerpZ D
	FIELD aw lerpYRot D
	FIELD ax lerpXRot D
	FIELD ay inputLeft Z
	FIELD az inputRight Z
	FIELD b DATA_ID_HURT Lth;
	FIELD c DATA_ID_HURTDIR Lth;
	FIELD d DATA_ID_DAMAGE Lth;
	FIELD e DATA_ID_TYPE Lth;
	FIELD f DATA_ID_PADDLE_LEFT Lth;
	FIELD g DATA_ID_PADDLE_RIGHT Lth;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lanf;Lbnx;)V
	METHOD <init> <init> (Lbnx;DDD)V
	METHOD A getBubbleTime ()I
	METHOD O getAddEntityPacket ()Lmz;
	METHOD a lerpTo (DDDFFIZ)V
	METHOD a checkFallDamage (DZLcdt;Lfo;)V
	METHOD a setDamage (F)V
	METHOD a getPaddleState (I)Z
	METHOD a getRowingTime (IF)F
	METHOD a hurt (Laml;F)Z
	METHOD a clampRotation (Lanb;)V
	METHOD a interact (Lbch;Lalu;)Z
	METHOD a setType (Lbdx$b;)V
	METHOD a readAdditionalSaveData (Lkz;)V
	METHOD a setPaddleState (ZZ)V
	METHOD a setInput (ZZZZ)V
	METHOD aQ isPickable ()Z
	METHOD aR isPushable ()Z
	METHOD aY getRideHeight ()D
	METHOD ax isMovementNoisy ()Z
	METHOD ay getCollideBox ()Lddj;
	METHOD b getBubbleAngle (F)F
	METHOD b setHurtTime (I)V
	METHOD b addAdditionalSaveData (Lkz;)V
	METHOD bX getMotionDirection ()Lft;
	METHOD bh animateHurt ()V
	METHOD c setHurtDir (I)V
	METHOD c getDismountLocationForPassenger (Lanm;)Lddp;
	METHOD ch getControllingPassenger ()Lanb;
	METHOD d setBubbleTime (I)V
	METHOD f getDropItem ()Lbii;
	METHOD h tick ()V
	METHOD i getPaddleSound ()Labr;
	METHOD i push (Lanb;)V
	METHOD j getCollideAgainstBox (Lanb;)Lddj;
	METHOD k getWaterLevelAbove ()F
	METHOD k positionRider (Lanb;)V
	METHOD k onAboveBubbleCol (Z)V
	METHOD l getGroundFriction ()F
	METHOD l onPassengerTurned (Lanb;)V
	METHOD m getDamage ()F
	METHOD n getHurtTime ()I
	METHOD o getHurtDir ()I
	METHOD p getBoatType ()Lbdx$b;
	METHOD q tickBubbleColumn ()V
	METHOD q canAddPassenger (Lanb;)Z
	METHOD r tickLerp ()V
	METHOD s getStatus ()Lbdx$a;
	METHOD u checkInWater ()Z
	METHOD v isUnderwater ()Lbdx$a;
	METHOD w floatBoat ()V
	METHOD w_ defineSynchedData ()V
	METHOD z controlBoat ()V
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type [I
		FIELD b $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status [I
		METHOD <clinit> <clinit> ()V
	CLASS a Status
		FIELD a IN_WATER Lbdx$a;
		FIELD b UNDER_WATER Lbdx$a;
		FIELD c UNDER_FLOWING_WATER Lbdx$a;
		FIELD d ON_LAND Lbdx$a;
		FIELD e IN_AIR Lbdx$a;
		FIELD f $VALUES [Lbdx$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I)V
		METHOD valueOf valueOf (Ljava/lang/String;)Lbdx$a;
		METHOD values values ()[Lbdx$a;
	CLASS b Type
		FIELD a OAK Lbdx$b;
		FIELD b SPRUCE Lbdx$b;
		FIELD c BIRCH Lbdx$b;
		FIELD d JUNGLE Lbdx$b;
		FIELD e ACACIA Lbdx$b;
		FIELD f DARK_OAK Lbdx$b;
		FIELD g name Ljava/lang/String;
		FIELD h planks Lbtu;
		FIELD i $VALUES [Lbdx$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILbtu;Ljava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a byId (I)Lbdx$b;
		METHOD a byName (Ljava/lang/String;)Lbdx$b;
		METHOD b getPlanks ()Lbtu;
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lbdx$b;
		METHOD values values ()[Lbdx$b;
