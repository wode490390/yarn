CLASS bai net/minecraft/world/entity/vehicle/Boat
	FIELD aA inputRight Z
	FIELD aB inputUp Z
	FIELD aC inputDown Z
	FIELD aD waterLevel D
	FIELD aE landFriction F
	FIELD aF status Lbai$a;
	FIELD aG oldStatus Lbai$a;
	FIELD aH lastYd D
	FIELD aI isAboveBubbleColumn Z
	FIELD aJ bubbleColumnDirectionIsDown Z
	FIELD aK bubbleMultiplier F
	FIELD aL bubbleAngle F
	FIELD aM bubbleAngleO F
	FIELD ao DATA_ID_BUBBLE_TIME Lsb;
	FIELD ap paddlePositions [F
	FIELD aq invFriction F
	FIELD ar outOfControlTicks F
	FIELD as deltaRotation F
	FIELD at lerpSteps I
	FIELD au lerpX D
	FIELD av lerpY D
	FIELD aw lerpZ D
	FIELD ax lerpYRot D
	FIELD ay lerpXRot D
	FIELD az inputLeft Z
	FIELD b DATA_ID_HURT Lsb;
	FIELD c DATA_ID_HURTDIR Lsb;
	FIELD d DATA_ID_DAMAGE Lsb;
	FIELD e DATA_ID_TYPE Lsb;
	FIELD f DATA_ID_PADDLE_LEFT Lsb;
	FIELD g DATA_ID_PADDLE_RIGHT Lsb;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lalc;Lbkf;)V
	METHOD <init> <init> (Lbkf;DDD)V
	METHOD A getBubbleTime ()I
	METHOD L getAddEntityPacket ()Llt;
	METHOD a lerpTo (DDDFFIZ)V
	METHOD a checkFallDamage (DZLbzh;Lfk;)V
	METHOD a setDamage (F)V
	METHOD a getPaddleState (I)Z
	METHOD a getRowingTime (IF)F
	METHOD a hurt (Lakh;F)Z
	METHOD a clampRotation (Laky;)V
	METHOD a setType (Lbai$b;)V
	METHOD a readAdditionalSaveData (Ljt;)V
	METHOD a setPaddleState (ZZ)V
	METHOD a setInput (ZZZZ)V
	METHOD aK isPickable ()Z
	METHOD aL isPushable ()Z
	METHOD aS getRideHeight ()D
	METHOD at isMovementNoisy ()Z
	METHOD au getCollideBox ()Lcwo;
	METHOD b getBubbleAngle (F)F
	METHOD b setHurtTime (I)V
	METHOD b interact (Lays;Lajr;)Z
	METHOD b addAdditionalSaveData (Ljt;)V
	METHOD bR getMotionDirection ()Lfp;
	METHOD bb animateHurt ()V
	METHOD c setHurtDir (I)V
	METHOD cd getControllingPassenger ()Laky;
	METHOD d setBubbleTime (I)V
	METHOD f getDropItem ()Lber;
	METHOD h tick ()V
	METHOD i getPaddleSound ()Laai;
	METHOD i push (Laky;)V
	METHOD j getCollideAgainstBox (Laky;)Lcwo;
	METHOD j onAboveBubbleCol (Z)V
	METHOD k getWaterLevelAbove ()F
	METHOD k positionRider (Laky;)V
	METHOD l getGroundFriction ()F
	METHOD l onPassengerTurned (Laky;)V
	METHOD m getDamage ()F
	METHOD n getHurtTime ()I
	METHOD o getHurtDir ()I
	METHOD p getBoatType ()Lbai$b;
	METHOD q tickBubbleColumn ()V
	METHOD q canAddPassenger (Laky;)Z
	METHOD r tickLerp ()V
	METHOD s getStatus ()Lbai$a;
	METHOD u checkInWater ()Z
	METHOD v isUnderwater ()Lbai$a;
	METHOD w floatBoat ()V
	METHOD w_ defineSynchedData ()V
	METHOD z controlBoat ()V
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type [I
		FIELD b $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status [I
		METHOD <clinit> <clinit> ()V
	CLASS a Status
		FIELD a IN_WATER Lbai$a;
		FIELD b UNDER_WATER Lbai$a;
		FIELD c UNDER_FLOWING_WATER Lbai$a;
		FIELD d ON_LAND Lbai$a;
		FIELD e IN_AIR Lbai$a;
		FIELD f $VALUES [Lbai$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I)V
		METHOD valueOf valueOf (Ljava/lang/String;)Lbai$a;
		METHOD values values ()[Lbai$a;
	CLASS b Type
		FIELD a OAK Lbai$b;
		FIELD b SPRUCE Lbai$b;
		FIELD c BIRCH Lbai$b;
		FIELD d JUNGLE Lbai$b;
		FIELD e ACACIA Lbai$b;
		FIELD f DARK_OAK Lbai$b;
		FIELD g name Ljava/lang/String;
		FIELD h planks Lbpy;
		FIELD i $VALUES [Lbai$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILbpy;Ljava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a byId (I)Lbai$b;
		METHOD a byName (Ljava/lang/String;)Lbai$b;
		METHOD b getPlanks ()Lbpy;
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lbai$b;
		METHOD values values ()[Lbai$b;
