CLASS bkw net/minecraft/world/entity/vehicle/Boat
	FIELD aA invFriction F
	FIELD aB outOfControlTicks F
	FIELD aC deltaRotation F
	FIELD aD lerpSteps I
	FIELD aE lerpX D
	FIELD aF lerpY D
	FIELD aG lerpZ D
	FIELD aH lerpYRot D
	FIELD aI lerpXRot D
	FIELD aJ inputLeft Z
	FIELD aK inputRight Z
	FIELD aL inputUp Z
	FIELD aM inputDown Z
	FIELD aN waterLevel D
	FIELD aO landFriction F
	FIELD aP status Lbkw$a;
	FIELD aQ oldStatus Lbkw$a;
	FIELD aR lastYd D
	FIELD aS isAboveBubbleColumn Z
	FIELD aT bubbleColumnDirectionIsDown Z
	FIELD aU bubbleMultiplier F
	FIELD aV bubbleAngle F
	FIELD aW bubbleAngleO F
	FIELD ar DATA_ID_HURTDIR Lvy;
	FIELD as DATA_ID_DAMAGE Lvy;
	FIELD at DATA_ID_TYPE Lvy;
	FIELD au DATA_ID_PADDLE_LEFT Lvy;
	FIELD av DATA_ID_PADDLE_RIGHT Lvy;
	FIELD aw DATA_ID_BUBBLE_TIME Lvy;
	FIELD ax TIME_TO_EJECT I
	FIELD ay PADDLE_SPEED D
	FIELD az paddlePositions [F
	FIELD b PADDLE_LEFT I
	FIELD c PADDLE_RIGHT I
	FIELD d PADDLE_SOUND_TIME D
	FIELD e BUBBLE_TIME I
	FIELD f DATA_ID_HURT Lvy;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lasp;Lbvr;)V
	METHOD <init> <init> (Lbvr;DDD)V
	METHOD O getAddEntityPacket ()Lpf;
	METHOD a lerpTo (DDDFFIZ)V
	METHOD a checkFallDamage (DZLcjr;Lgb;)V
	METHOD a setDamage (F)V
	METHOD a getPaddleState (I)Z
	METHOD a getRowingTime (IF)F
	METHOD a hurt (Larv;F)Z
	METHOD a clampRotation (Lasl;)V
	METHOD a canVehicleCollide (Lasl;Lasl;)Z
	METHOD a getEyeHeight (Latj;Lasm;)F
	METHOD a interact (Lbjf;Larf;)Larg;
	METHOD a setType (Lbkw$b;)V
	METHOD a getRelativePortalPosition (Lgg$a;Ln$a;)Ldly;
	METHOD a readAdditionalSaveData (Lmv;)V
	METHOD a setPaddleState (ZZ)V
	METHOD a setInput (ZZZZ)V
	METHOD aE getMovementEmission ()Lasl$b;
	METHOD aL isUnderWater ()Z
	METHOD aY isPickable ()Z
	METHOD aZ isPushable ()Z
	METHOD b getBubbleAngle (F)F
	METHOD b setHurtTime (I)V
	METHOD b lambda$tickBubbleColumn$0 (Lasl;)Z
	METHOD b getDismountLocationForPassenger (Lasy;)Ldly;
	METHOD b addAdditionalSaveData (Lmv;)V
	METHOD be canBeCollidedWith ()Z
	METHOD bh getPassengersRidingOffset ()D
	METHOD br animateHurt ()V
	METHOD c setHurtDir (I)V
	METHOD cZ getPickResult ()Lbpr;
	METHOD ck getMotionDirection ()Lgg;
	METHOD cu getControllingPassenger ()Lasl;
	METHOD d setBubbleTime (I)V
	METHOD e defineSynchedData ()V
	METHOD g getDropItem ()Lbpn;
	METHOD h getPaddleSound ()Laev;
	METHOD i getWaterLevelAbove ()F
	METHOD i push (Lasl;)V
	METHOD j tick ()V
	METHOD j canCollideWith (Lasl;)Z
	METHOD k getGroundFriction ()F
	METHOD k positionRider (Lasl;)V
	METHOD k onAboveBubbleCol (Z)V
	METHOD l onPassengerTurned (Lasl;)V
	METHOD m getDamage ()F
	METHOD n getHurtTime ()I
	METHOD o getHurtDir ()I
	METHOD p getBoatType ()Lbkw$b;
	METHOD q tickBubbleColumn ()V
	METHOD q canAddPassenger (Lasl;)Z
	METHOD r tickLerp ()V
	METHOD s getStatus ()Lbkw$a;
	METHOD u checkInWater ()Z
	METHOD v isUnderwater ()Lbkw$a;
	METHOD w floatBoat ()V
	METHOD y controlBoat ()V
	METHOD z getBubbleTime ()I
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type [I
		FIELD b $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status [I
		METHOD <clinit> <clinit> ()V
	CLASS a Status
		FIELD a IN_WATER Lbkw$a;
		FIELD b UNDER_WATER Lbkw$a;
		FIELD c UNDER_FLOWING_WATER Lbkw$a;
		FIELD d ON_LAND Lbkw$a;
		FIELD e IN_AIR Lbkw$a;
		FIELD f $VALUES [Lbkw$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I)V
		METHOD valueOf valueOf (Ljava/lang/String;)Lbkw$a;
		METHOD values values ()[Lbkw$a;
	CLASS b Type
		FIELD a OAK Lbkw$b;
		FIELD b SPRUCE Lbkw$b;
		FIELD c BIRCH Lbkw$b;
		FIELD d JUNGLE Lbkw$b;
		FIELD e ACACIA Lbkw$b;
		FIELD f DARK_OAK Lbkw$b;
		FIELD g name Ljava/lang/String;
		FIELD h planks Lbyq;
		FIELD i $VALUES [Lbkw$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILbyq;Ljava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a byId (I)Lbkw$b;
		METHOD a byName (Ljava/lang/String;)Lbkw$b;
		METHOD b getPlanks ()Lbyq;
		METHOD toString toString ()Ljava/lang/String;
		METHOD valueOf valueOf (Ljava/lang/String;)Lbkw$b;
		METHOD values values ()[Lbkw$b;
