CLASS cmn net/minecraft/world/level/chunk/storage/RegionFile
	FIELD a SECTOR_INTS I
	FIELD b usedSectors Lcmm;
	FIELD c LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD d SECTOR_BYTES I
	FIELD e CHUNK_HEADER_SIZE I
	FIELD f HEADER_OFFSET I
	FIELD g PADDING_BUFFER Ljava/nio/ByteBuffer;
	FIELD h EXTERNAL_FILE_EXTENSION Ljava/lang/String;
	FIELD i EXTERNAL_STREAM_FLAG I
	FIELD j EXTERNAL_CHUNK_THRESHOLD I
	FIELD k CHUNK_NOT_PRESENT I
	FIELD l file Ljava/nio/channels/FileChannel;
	FIELD m externalFileDir Ljava/nio/file/Path;
	FIELD n version Lcmp;
	FIELD o header Ljava/nio/ByteBuffer;
	FIELD p offsets Ljava/nio/IntBuffer;
	FIELD q timestamps Ljava/nio/IntBuffer;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Ljava/io/File;Ljava/io/File;Z)V
	METHOD <init> <init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Lcmp;Z)V
	METHOD a flush ()V
	METHOD a isExternalStreamChunk (B)Z
	METHOD a getNumSectors (I)I
	METHOD a packSectorOffset (II)I
	METHOD a getChunkDataInputStream (Lbuw;)Ljava/io/DataInputStream;
	METHOD a createExternalChunkInputStream (Lbuw;B)Ljava/io/DataInputStream;
	METHOD a createChunkInputStream (Lbuw;BLjava/io/InputStream;)Ljava/io/DataInputStream;
	METHOD a write (Lbuw;Ljava/nio/ByteBuffer;)V
	METHOD a access$000 (Lcmn;)Lcmp;
	METHOD a createStream (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream;
	METHOD a writeToExternalFile (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lcmn$b;
	METHOD a lambda$writeToExternalFile$1 (Ljava/nio/file/Path;Ljava/nio/file/Path;)V
	METHOD b getTimestamp ()I
	METHOD b getExternalChunkVersion (B)B
	METHOD b getSectorNumber (I)I
	METHOD b doesChunkExist (Lbuw;)Z
	METHOD c createExternalStub ()Ljava/nio/ByteBuffer;
	METHOD c sizeToSectors (I)I
	METHOD c getChunkDataOutputStream (Lbuw;)Ljava/io/DataOutputStream;
	METHOD close close ()V
	METHOD d writeHeader ()V
	METHOD d clear (Lbuw;)V
	METHOD e padToFullSector ()V
	METHOD e hasChunk (Lbuw;)Z
	METHOD f getExternalChunkPath (Lbuw;)Ljava/nio/file/Path;
	METHOD g getOffset (Lbuw;)I
	METHOD h getOffsetIndex (Lbuw;)I
	METHOD i lambda$write$0 (Lbuw;)V
	CLASS a ChunkBuffer
		FIELD a this$0 Lcmn;
		FIELD b pos Lbuw;
		METHOD <init> <init> (Lcmn;Lbuw;)V
		METHOD close close ()V
	CLASS b CommitOp
		METHOD run run ()V
