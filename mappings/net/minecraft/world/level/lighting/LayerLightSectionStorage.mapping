CLASS cwd net/minecraft/world/level/lighting/LayerLightSectionStorage
	FIELD a EMPTY_DATA Lcfq;
	FIELD b dataSectionSet Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD c toMarkNoData Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD d toMarkData Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD e visibleSectionData Lcvy;
	FIELD f updatingSectionData Lcvy;
	FIELD g changedSections Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD h sectionsAffectedByLightUpdates Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD i queuedSections Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;
	FIELD j hasToRemove Z
	FIELD k DIRECTIONS [Lft;
	FIELD l layer Lbog;
	FIELD m chunkSource Lcfy;
	FIELD n columnsToRetainQueuedDataFor Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD o toRemove Lit/unimi/dsi/fastutil/longs/LongSet;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lbog;Lcfy;Lcvy;)V
	METHOD a hasInconsistencies ()Z
	METHOD a setLevel (JI)V
	METHOD a lambda$clearQueuedSectionBlocks$0 (JJ)Z
	METHOD a queueSectionData (JLcfq;)V
	METHOD a getDataLayer (JZ)Lcfq;
	METHOD a getDataLayer (Lcvy;J)Lcfq;
	METHOD a clearQueuedSectionBlocks (Lcwb;J)V
	METHOD a markNewInconsistencies (Lcwb;ZZ)V
	METHOD b getLevelFromSource (J)I
	METHOD b setStoredLevel (JI)V
	METHOD b enableLightSources (JZ)V
	METHOD c getLevel (J)I
	METHOD c retainData (JZ)V
	METHOD d runAllUpdates ()V
	METHOD d getLightValue (J)I
	METHOD d updateSectionStatus (JZ)V
	METHOD e swapSectionMap ()V
	METHOD g storingLightForSection (J)Z
	METHOD h getDataLayerData (J)Lcfq;
	METHOD i getStoredLevel (J)I
	METHOD j createDataLayer (J)Lcfq;
	METHOD k onNodeAdded (J)V
	METHOD l onNodeRemoved (J)V
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$core$Direction [I
		METHOD <clinit> <clinit> ()V
