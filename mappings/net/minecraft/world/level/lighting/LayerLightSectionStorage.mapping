CLASS ddg net/minecraft/world/level/lighting/LayerLightSectionStorage
	FIELD a LIGHT_AND_DATA I
	FIELD b LIGHT_ONLY I
	FIELD c EMPTY I
	FIELD d EMPTY_DATA Lclp;
	FIELD e dataSectionSet Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD f toMarkNoData Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD g toMarkData Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD h visibleSectionData Lddb;
	FIELD i updatingSectionData Lddb;
	FIELD j changedSections Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD k sectionsAffectedByLightUpdates Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD l queuedSections Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;
	FIELD m hasToRemove Z
	FIELD n DIRECTIONS [Lgg;
	FIELD o layer Lbwa;
	FIELD p chunkSource Lclx;
	FIELD q untrustedSections Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD r columnsToRetainQueuedDataFor Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD s toRemove Lit/unimi/dsi/fastutil/longs/LongSet;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lbwa;Lclx;Lddb;)V
	METHOD a hasInconsistencies ()Z
	METHOD a setLevel (JI)V
	METHOD a lambda$clearQueuedSectionBlocks$0 (JJ)Z
	METHOD a queueSectionData (JLclp;Z)V
	METHOD a getDataLayer (JZ)Lclp;
	METHOD a getDataLayer (Lddb;J)Lclp;
	METHOD a clearQueuedSectionBlocks (Ldde;J)V
	METHOD a markNewInconsistencies (Ldde;ZZ)V
	METHOD b getLevelFromSource (J)I
	METHOD b setStoredLevel (JI)V
	METHOD b enableLightSources (JZ)V
	METHOD b checkEdgesForSection (Ldde;J)V
	METHOD c getLevel (J)I
	METHOD c retainData (JZ)V
	METHOD d runAllUpdates ()V
	METHOD d getLightValue (J)I
	METHOD d updateSectionStatus (JZ)V
	METHOD e swapSectionMap ()V
	METHOD g storingLightForSection (J)Z
	METHOD h getDataLayerData (J)Lclp;
	METHOD i getStoredLevel (J)I
	METHOD j createDataLayer (J)Lclp;
	METHOD k onNodeAdded (J)V
	METHOD l onNodeRemoved (J)V
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$core$Direction [I
		METHOD <clinit> <clinit> ()V
