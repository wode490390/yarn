CLASS cla net/minecraft/world/level/lighting/LayerLightSectionStorage
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$core$Direction [I
		METHOD <clinit> <clinit> ()V
	FIELD a EMPTY_DATA Lbxn;
	FIELD b dataSectionSet Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD c toMarkNoData Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD d toMarkData Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD e visibleSectionData Lckv;
	FIELD f updatingSectionData Lckv;
	FIELD g changedSections Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD h sectionsAffectedByLightUpdates Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD i queuedSections Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;
	FIELD j hasToRemove Z
	FIELD k DIRECTIONS [Lfb;
	FIELD l layer Lbia;
	FIELD m chunkSource Lbxv;
	FIELD n columnsToRetainQueuedDataFor Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD o toRemove Lit/unimi/dsi/fastutil/longs/LongSet;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lbia;Lbxv;Lckv;)V
	METHOD a hasInconsistencies ()Z
	METHOD a setLevel (JI)V
	METHOD a queueSectionData (JLbxn;)V
	METHOD a getDataLayer (JZ)Lbxn;
	METHOD a getDataLayer (Lckv;J)Lbxn;
	METHOD a clearQueuedSectionBlocks (Lcky;J)V
	METHOD a markNewInconsistencies (Lcky;ZZ)V
	METHOD b getLevelFromSource (J)I
	METHOD b setStoredLevel (JI)V
	METHOD b enableLightSources (JZ)V
	METHOD c runAllUpdates ()V
	METHOD c getLevel (J)I
	METHOD c retainData (JZ)V
	METHOD d swapSectionMap ()V
	METHOD d getLightValue (J)I
	METHOD d updateSectionStatus (JZ)V
	METHOD g storingLightForSection (J)Z
	METHOD h getDataLayerData (J)Lbxn;
	METHOD i getStoredLevel (J)I
	METHOD j createDataLayer (J)Lbxn;
	METHOD k onNodeAdded (J)V
	METHOD l onNodeRemoved (J)V
