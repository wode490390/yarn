CLASS bvo net/minecraft/world/level/block/StairBlock
	FIELD A BOTTOM_SHAPES [Lcxo;
	FIELD B SHAPE_BY_STATE [I
	FIELD C base Lbpy;
	FIELD D baseState Lbzh;
	FIELD a FACING Lcac;
	FIELD b HALF Lcaf;
	FIELD c SHAPE Lcaf;
	FIELD d WATERLOGGED Lbzz;
	FIELD e TOP_AABB Lcxo;
	FIELD f BOTTOM_AABB Lcxo;
	FIELD g OCTET_NNN Lcxo;
	FIELD h OCTET_NNP Lcxo;
	FIELD i OCTET_NPN Lcxo;
	FIELD j OCTET_NPP Lcxo;
	FIELD k OCTET_PNN Lcxo;
	FIELD w OCTET_PNP Lcxo;
	FIELD x OCTET_PPN Lcxo;
	FIELD y OCTET_PPP Lcxo;
	FIELD z TOP_SHAPES [Lcxo;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lbzh;Lbpy$c;)V
	METHOD a makeStairShape (ILcxo;Lcxo;Lcxo;Lcxo;Lcxo;)Lcxo;
	METHOD a getStateForPlacement (Lbcz;)Lbzh;
	METHOD a stepOn (Lbkf;Lfk;Laky;)V
	METHOD a wasExploded (Lbkf;Lfk;Lbjy;)V
	METHOD a destroy (Lbkg;Lfk;Lbzh;)V
	METHOD a getTickDelay (Lbki;)I
	METHOD a isPathfindable (Lbzh;Lbjp;Lfk;Lcsa;)Z
	METHOD a getShape (Lbzh;Lbjp;Lfk;Lcwz;)Lcxo;
	METHOD a attack (Lbzh;Lbkf;Lfk;Lays;)V
	METHOD a use (Lbzh;Lbkf;Lfk;Lays;Lajr;Lcwp;)Lajs;
	METHOD a onRemove (Lbzh;Lbkf;Lfk;Lbzh;Z)V
	METHOD a animateTick (Lbzh;Lbkf;Lfk;Ljava/util/Random;)V
	METHOD a mirror (Lbzh;Lbtm;)Lbzh;
	METHOD a rotate (Lbzh;Lbup;)Lbzh;
	METHOD a updateShape (Lbzh;Lfp;Lbzh;Lbkg;Lfk;Lfk;)Lbzh;
	METHOD a tick (Lbzh;Lxe;Lfk;Ljava/util/Random;)V
	METHOD a createBlockStateDefinition (Lbzi$a;)V
	METHOD a makeShapes (Lcxo;Lcxo;Lcxo;Lcxo;Lcxo;)[Lcxo;
	METHOD a lambda$makeShapes$0 (Lcxo;Lcxo;Lcxo;Lcxo;Lcxo;I)Lcxo;
	METHOD b lambda$makeShapes$1 (I)[Lcxo;
	METHOD b onPlace (Lbzh;Lbkf;Lfk;Lbzh;Z)V
	METHOD b_ getFluidState (Lbzh;)Lcpt;
	METHOD d prepareRender (Lbjp;Lfk;)V
	METHOD e canTakeShape (Lbzh;Lbjp;Lfk;Lfp;)Z
	METHOD h getExplosionResistance ()F
	METHOD h isStairs (Lbzh;)Z
	METHOD i getShapeIndex (Lbzh;)I
	METHOD n getStairsShape (Lbzh;Lbjp;Lfk;)Lcao;
	METHOD o useShapeForLightOcclusion (Lbzh;)Z
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape [I
		FIELD b $SwitchMap$net$minecraft$world$level$block$Mirror [I
		METHOD <clinit> <clinit> ()V
