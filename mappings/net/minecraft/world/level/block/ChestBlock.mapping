CLASS bzo net/minecraft/world/level/block/ChestBlock
	FIELD b FACING Lckl;
	FIELD c TYPE Lckp;
	FIELD d WATERLOGGED Lcki;
	FIELD e EVENT_SET_OPEN_COUNT I
	FIELD f AABB_OFFSET I
	FIELD g AABB_HEIGHT I
	FIELD h NORTH_AABB Ldmr;
	FIELD i SOUTH_AABB Ldmr;
	FIELD j WEST_AABB Ldmr;
	FIELD k EAST_AABB Ldmr;
	FIELD l AABB Ldmr;
	FIELD m CHEST_COMBINER Lcan$b;
	FIELD n MENU_PROVIDER_COMBINER Lcan$b;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lcjq$c;Ljava/util/function/Supplier;)V
	METHOD a getStateForPlacement (Lbrr;)Lcjr;
	METHOD a candidatePartnerFacing (Lbrr;Lgg;)Lgg;
	METHOD a isBlockedChestByBlock (Lbuv;Lgb;)Z
	METHOD a getTicker (Lbvr;Lcjr;Lchr;)Lchq;
	METHOD a setPlacedBy (Lbvr;Lgb;Lcjr;Lasy;Lbpr;)V
	METHOD a isChestBlockedAt (Lbvs;Lgb;)Z
	METHOD a getContainer (Lbzo;Lcjr;Lbvr;Lgb;Z)Laqz;
	METHOD a opennessCombiner (Lcil;)Lcan$b;
	METHOD a isPathfindable (Lcjr;Lbuv;Lgb;Ldfz;)Z
	METHOD a getShape (Lcjr;Lbuv;Lgb;Ldmd;)Ldmr;
	METHOD a getAnalogOutputSignal (Lcjr;Lbvr;Lgb;)I
	METHOD a use (Lcjr;Lbvr;Lgb;Lbjf;Larf;Ldlu;)Larg;
	METHOD a onRemove (Lcjr;Lbvr;Lgb;Lcjr;Z)V
	METHOD a combine (Lcjr;Lbvr;Lgb;Z)Lcan$c;
	METHOD a mirror (Lcjr;Lccy;)Lcjr;
	METHOD a rotate (Lcjr;Lcek;)Lcjr;
	METHOD a updateShape (Lcjr;Lgg;Lcjr;Lbvs;Lgb;Lgb;)Lcjr;
	METHOD a createBlockStateDefinition (Lcjs$a;)V
	METHOD a newBlockEntity (Lgb;Lcjr;)Lchp;
	METHOD a_ tick (Lcjr;Labj;Lgb;Ljava/util/Random;)V
	METHOD b isCatSittingOnChest (Lbvs;Lgb;)Z
	METHOD b getMenuProvider (Lcjr;Lbvr;Lgb;)Larj;
	METHOD b_ getRenderShape (Lcjr;)Lced;
	METHOD c lambda$combine$0 (Lbvs;Lgb;)Z
	METHOD c_ getFluidState (Lcjr;)Lddq;
	METHOD d getOpenChestStat ()Lafd;
	METHOD e blockEntityType ()Lchr;
	METHOD g getBlockType (Lcjr;)Lcan$a;
	METHOD g_ hasAnalogOutputSignal (Lcjr;)Z
	METHOD h getConnectedDirection (Lcjr;)Lgg;
	CLASS 1 1
		METHOD <init> <init> ()V
		METHOD a acceptNone ()Ljava/util/Optional;
		METHOD a acceptSingle (Lchu;)Ljava/util/Optional;
		METHOD a acceptDouble (Lchu;Lchu;)Ljava/util/Optional;
		METHOD a acceptSingle (Ljava/lang/Object;)Ljava/lang/Object;
		METHOD a acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
		METHOD b acceptNone ()Ljava/lang/Object;
	CLASS 2 2
		METHOD <init> <init> ()V
		METHOD a acceptNone ()Ljava/util/Optional;
		METHOD a acceptSingle (Lchu;)Ljava/util/Optional;
		METHOD a acceptDouble (Lchu;Lchu;)Ljava/util/Optional;
		METHOD a acceptSingle (Ljava/lang/Object;)Ljava/lang/Object;
		METHOD a acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
		METHOD b acceptNone ()Ljava/lang/Object;
		CLASS 1 1
			FIELD a val$first Lchu;
			FIELD b val$second Lchu;
			FIELD c val$container Laqz;
			FIELD d this$0 Lbzo$2;
			METHOD <init> <init> (Lbzo$2;Lchu;Lchu;Laqz;)V
			METHOD createMenu createMenu (ILbje;Lbjf;)Lbll;
			METHOD d getDisplayName ()Lon;
	CLASS 3 3
		FIELD a val$entity Lcil;
		METHOD <init> <init> (Lcil;)V
		METHOD a acceptNone ()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;
		METHOD a acceptSingle (Lchu;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;
		METHOD a acceptDouble (Lchu;Lchu;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;
		METHOD a lambda$acceptDouble$0 (Lchu;Lchu;F)F
		METHOD a acceptSingle (Ljava/lang/Object;)Ljava/lang/Object;
		METHOD a acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
		METHOD b acceptNone ()Ljava/lang/Object;
	CLASS 4 4
		FIELD a $SwitchMap$net$minecraft$core$Direction [I
		METHOD <clinit> <clinit> ()V
