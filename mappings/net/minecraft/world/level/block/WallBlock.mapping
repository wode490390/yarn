CLASS cgm net/minecraft/world/level/block/WallBlock
	FIELD F POST_TEST Ldmr;
	FIELD G NORTH_TEST Ldmr;
	FIELD H SOUTH_TEST Ldmr;
	FIELD I WEST_TEST Ldmr;
	FIELD J EAST_TEST Ldmr;
	FIELD a UP Lcki;
	FIELD b EAST_WALL Lckp;
	FIELD c NORTH_WALL Lckp;
	FIELD d SOUTH_WALL Lckp;
	FIELD e WEST_WALL Lckp;
	FIELD f WATERLOGGED Lcki;
	FIELD g shapeByIndex Ljava/util/Map;
	FIELD h collisionShapeByIndex Ljava/util/Map;
	FIELD i WALL_WIDTH I
	FIELD j WALL_HEIGHT I
	FIELD k POST_WIDTH I
	FIELD l POST_COVER_WIDTH I
	FIELD m WALL_COVER_START I
	FIELD n WALL_COVER_END I
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lcjq$c;)V
	METHOD a makeShapes (FFFFFF)Ljava/util/Map;
	METHOD a getStateForPlacement (Lbrr;)Lcjr;
	METHOD a topUpdate (Lbvu;Lcjr;Lgb;Lcjr;)Lcjr;
	METHOD a updateShape (Lbvu;Lcjr;Lgb;Lcjr;ZZZZ)Lcjr;
	METHOD a sideUpdate (Lbvu;Lgb;Lcjr;Lgb;Lcjr;Lgg;)Lcjr;
	METHOD a isPathfindable (Lcjr;Lbuv;Lgb;Ldfz;)Z
	METHOD a getShape (Lcjr;Lbuv;Lgb;Ldmd;)Ldmr;
	METHOD a mirror (Lcjr;Lccy;)Lcjr;
	METHOD a rotate (Lcjr;Lcek;)Lcjr;
	METHOD a shouldRaisePost (Lcjr;Lcjr;Ldmr;)Z
	METHOD a isConnected (Lcjr;Lcku;)Z
	METHOD a updateShape (Lcjr;Lgg;Lcjr;Lbvs;Lgb;Lgb;)Lcjr;
	METHOD a connectsTo (Lcjr;ZLgg;)Z
	METHOD a updateSides (Lcjr;ZZZZLdmr;)Lcjr;
	METHOD a createBlockStateDefinition (Lcjs$a;)V
	METHOD a applyWallShape (Ldmr;Lclc;Ldmr;Ldmr;)Ldmr;
	METHOD a isCovered (Ldmr;Ldmr;)Z
	METHOD a makeWallState (ZLdmr;Ldmr;)Lclc;
	METHOD c propagatesSkylightDown (Lcjr;Lbuv;Lgb;)Z
	METHOD c getCollisionShape (Lcjr;Lbuv;Lgb;Ldmd;)Ldmr;
	METHOD c_ getFluidState (Lcjr;)Lddq;
	CLASS 1 1
		FIELD a $SwitchMap$net$minecraft$world$level$block$Rotation [I
		FIELD b $SwitchMap$net$minecraft$world$level$block$Mirror [I
		METHOD <clinit> <clinit> ()V
