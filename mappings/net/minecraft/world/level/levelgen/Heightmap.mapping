CLASS ccu net/minecraft/world/level/levelgen/Heightmap
	FIELD a NOT_AIR Ljava/util/function/Predicate;
	FIELD b MATERIAL_MOTION_BLOCKING Ljava/util/function/Predicate;
	FIELD c data Labe;
	FIELD d isOpaque Ljava/util/function/Predicate;
	FIELD e chunk Lcax;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lcax;Lccu$a;)V
	METHOD a getRawData ()[J
	METHOD a getFirstAvailable (I)I
	METHOD a getFirstAvailable (II)I
	METHOD a setHeight (III)V
	METHOD a update (IIILbzh;)Z
	METHOD a lambda$static$1 (Lbzh;)Z
	METHOD a primeHeightmaps (Lcax;Ljava/util/Set;)V
	METHOD a setRawData ([J)V
	METHOD b access$000 ()Ljava/util/function/Predicate;
	METHOD b getHighestTaken (II)I
	METHOD b lambda$static$0 (Lbzh;)Z
	METHOD c access$100 ()Ljava/util/function/Predicate;
	METHOD c getIndex (II)I
	CLASS a Types
		FIELD a WORLD_SURFACE_WG Lccu$a;
		FIELD b WORLD_SURFACE Lccu$a;
		FIELD c OCEAN_FLOOR_WG Lccu$a;
		FIELD d OCEAN_FLOOR Lccu$a;
		FIELD e MOTION_BLOCKING Lccu$a;
		FIELD f MOTION_BLOCKING_NO_LEAVES Lccu$a;
		FIELD g serializationKey Ljava/lang/String;
		FIELD h usage Lccu$b;
		FIELD i isOpaque Ljava/util/function/Predicate;
		FIELD j REVERSE_LOOKUP Ljava/util/Map;
		FIELD k $VALUES [Lccu$a;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;Lccu$b;Ljava/util/function/Predicate;)V
		METHOD a getSerializationKey ()Ljava/lang/String;
		METHOD a lambda$static$1 (Lbzh;)Z
		METHOD a getFromKey (Ljava/lang/String;)Lccu$a;
		METHOD a lambda$static$2 (Ljava/util/HashMap;)V
		METHOD b sendToClient ()Z
		METHOD b lambda$static$0 (Lbzh;)Z
		METHOD c keepAfterWorldgen ()Z
		METHOD d isOpaque ()Ljava/util/function/Predicate;
		METHOD valueOf valueOf (Ljava/lang/String;)Lccu$a;
		METHOD values values ()[Lccu$a;
	CLASS b Usage
		FIELD a WORLDGEN Lccu$b;
		FIELD b LIVE_WORLD Lccu$b;
		FIELD c CLIENT Lccu$b;
		FIELD d $VALUES [Lccu$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;I)V
		METHOD valueOf valueOf (Ljava/lang/String;)Lccu$b;
		METHOD values values ()[Lccu$b;
