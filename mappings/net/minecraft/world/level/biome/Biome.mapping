CLASS bio net/minecraft/world/level/biome/Biome
	CLASS 1 1
		FIELD a this$0 Lbio;
		METHOD <init> <init> (Lbio;IF)V
		METHOD rehash rehash (I)V
	CLASS a BiomeBuilder
		FIELD a surfaceBuilder Lcjx;
		FIELD b precipitation Lbio$d;
		FIELD c biomeCategory Lbio$b;
		FIELD d depth Ljava/lang/Float;
		FIELD e scale Ljava/lang/Float;
		FIELD f temperature Ljava/lang/Float;
		FIELD g downfall Ljava/lang/Float;
		FIELD h waterColor Ljava/lang/Integer;
		FIELD i waterFogColor Ljava/lang/Integer;
		FIELD j parent Ljava/lang/String;
		METHOD <init> <init> ()V
		METHOD a depth (F)Lbio$a;
		METHOD a waterColor (I)Lbio$a;
		METHOD a access$000 (Lbio$a;)Lcjx;
		METHOD a biomeCategory (Lbio$b;)Lbio$a;
		METHOD a precipitation (Lbio$d;)Lbio$a;
		METHOD a surfaceBuilder (Lcjx;)Lbio$a;
		METHOD a surfaceBuilder (Lckh;Lckj;)Lbio$a;
		METHOD a parent (Ljava/lang/String;)Lbio$a;
		METHOD b scale (F)Lbio$a;
		METHOD b waterFogColor (I)Lbio$a;
		METHOD b access$100 (Lbio$a;)Lbio$d;
		METHOD c temperature (F)Lbio$a;
		METHOD c access$200 (Lbio$a;)Lbio$b;
		METHOD d downfall (F)Lbio$a;
		METHOD d access$300 (Lbio$a;)Ljava/lang/Float;
		METHOD e access$400 (Lbio$a;)Ljava/lang/Float;
		METHOD f access$500 (Lbio$a;)Ljava/lang/Float;
		METHOD g access$600 (Lbio$a;)Ljava/lang/Float;
		METHOD h access$700 (Lbio$a;)Ljava/lang/Integer;
		METHOD i access$800 (Lbio$a;)Ljava/lang/Integer;
		METHOD j access$900 (Lbio$a;)Ljava/lang/String;
		METHOD toString toString ()Ljava/lang/String;
	CLASS b BiomeCategory
		FIELD a NONE Lbio$b;
		FIELD b TAIGA Lbio$b;
		FIELD c EXTREME_HILLS Lbio$b;
		FIELD d JUNGLE Lbio$b;
		FIELD e MESA Lbio$b;
		FIELD f PLAINS Lbio$b;
		FIELD g SAVANNA Lbio$b;
		FIELD h ICY Lbio$b;
		FIELD i THEEND Lbio$b;
		FIELD j BEACH Lbio$b;
		FIELD k FOREST Lbio$b;
		FIELD l OCEAN Lbio$b;
		FIELD m DESERT Lbio$b;
		FIELD n RIVER Lbio$b;
		FIELD o SWAMP Lbio$b;
		FIELD p MUSHROOM Lbio$b;
		FIELD q NETHER Lbio$b;
		FIELD r BY_NAME Ljava/util/Map;
		FIELD s name Ljava/lang/String;
		FIELD t $VALUES [Lbio$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a lambda$static$0 (Lbio$b;)Lbio$b;
		METHOD a byName (Ljava/lang/String;)Lbio$b;
		METHOD valueOf valueOf (Ljava/lang/String;)Lbio$b;
		METHOD values values ()[Lbio$b;
	CLASS c BiomeTempCategory
		FIELD a OCEAN Lbio$c;
		FIELD b COLD Lbio$c;
		FIELD c MEDIUM Lbio$c;
		FIELD d WARM Lbio$c;
		FIELD e BY_NAME Ljava/util/Map;
		FIELD f name Ljava/lang/String;
		FIELD g $VALUES [Lbio$c;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a lambda$static$0 (Lbio$c;)Lbio$c;
		METHOD a byName (Ljava/lang/String;)Lbio$c;
		METHOD valueOf valueOf (Ljava/lang/String;)Lbio$c;
		METHOD values values ()[Lbio$c;
	CLASS d Precipitation
		FIELD a NONE Lbio$d;
		FIELD b RAIN Lbio$d;
		FIELD c SNOW Lbio$d;
		FIELD d BY_NAME Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		FIELD f $VALUES [Lbio$d;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a lambda$static$0 (Lbio$d;)Lbio$d;
		METHOD a byName (Ljava/lang/String;)Lbio$d;
		METHOD valueOf valueOf (Ljava/lang/String;)Lbio$d;
		METHOD values values ()[Lbio$d;
	CLASS e SpawnerData
		FIELD b type Lais;
		FIELD c minCount I
		FIELD d maxCount I
		METHOD <init> <init> (Lais;III)V
		METHOD a lambda$deserialize$0 (Lais;)Z
		METHOD a deserialize (Lcom/mojang/datafixers/Dynamic;)Lbio$e;
		METHOD a serialize (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;
		METHOD toString toString ()Ljava/lang/String;
	FIELD a LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD b EXPLORABLE_BIOMES Ljava/util/Set;
	FIELD c MUTATED_BIOMES Lff;
	FIELD d TEMPERATURE_NOISE Lckp;
	FIELD e BIOME_INFO_NOISE Lckp;
	FIELD f descriptionId Ljava/lang/String;
	FIELD g depth F
	FIELD h scale F
	FIELD i temperature F
	FIELD j downfall F
	FIELD k waterColor I
	FIELD l waterFogColor I
	FIELD m parent Ljava/lang/String;
	FIELD n surfaceBuilder Lcjx;
	FIELD o biomeCategory Lbio$b;
	FIELD p precipitation Lbio$d;
	FIELD q carvers Ljava/util/Map;
	FIELD r features Ljava/util/Map;
	FIELD s flowerFeatures Ljava/util/List;
	FIELD t validFeatureStarts Ljava/util/Map;
	FIELD u spawners Ljava/util/Map;
	FIELD v temperatureCache Ljava/lang/ThreadLocal;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lbio$a;)V
	METHOD a isMutated ()Z
	METHOD a getSkyColor (F)I
	METHOD a getBiome (ILbio;)Lbio;
	METHOD a getMobs (Laiz;)Ljava/util/List;
	METHOD a addSpawn (Laiz;Lbio$e;)V
	METHOD a shouldFreeze (Lbhu;Lew;)Z
	METHOD a shouldFreeze (Lbhu;Lew;Z)Z
	METHOD a getMutatedVariant (Lbio;)Lbio;
	METHOD a getCarvers (Lbyz$a;)Ljava/util/List;
	METHOD a addCarver (Lbyz$a;Lbzo;)V
	METHOD a getFeaturesForStep (Lbyz$b;)Ljava/util/List;
	METHOD a generate (Lbyz$b;Lbxi;Lbhs;JLbzk;Lew;)V
	METHOD a addFeature (Lbyz$b;Lcal;)V
	METHOD a makeCarver (Lbzt;Lbzm;)Lbzo;
	METHOD a makeComposite (Lcbn;Lcbo;Lche;Lcax;)Lcal;
	METHOD a isValidStart (Lceu;)Z
	METHOD a addStructureStart (Lceu;Lcbo;)V
	METHOD a serialize (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;
	METHOD a lambda$null$9 (Lcom/mojang/datafixers/types/DynamicOps;Lbio$e;)Ljava/lang/Object;
	METHOD a lambda$null$4 (Lcom/mojang/datafixers/types/DynamicOps;Lbzo;)Ljava/lang/Object;
	METHOD a lambda$null$6 (Lcom/mojang/datafixers/types/DynamicOps;Lcal;)Ljava/lang/Object;
	METHOD a lambda$serialize$10 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD a getFoliageColor (Lew;)I
	METHOD a buildSurfaceAt (Ljava/util/Random;Lbxh;IIIDLbvt;Lbvt;IJ)V
	METHOD b getPrecipitation ()Lbio$d;
	METHOD b shouldSnow (Lbhu;Lew;)Z
	METHOD b lambda$getCarvers$3 (Lbyz$a;)Ljava/util/List;
	METHOD b getStructureConfiguration (Lceu;)Lcbo;
	METHOD b lambda$serialize$8 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD b getGrassColor (Lew;)I
	METHOD c isHumid ()Z
	METHOD c lambda$addCarver$2 (Lbyz$a;)Ljava/util/List;
	METHOD c lambda$serialize$7 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD c getTemperatureNoCache (Lew;)F
	METHOD d getCreatureProbability ()F
	METHOD d lambda$serialize$5 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD d getTemperature (Lew;)F
	METHOD e getFlowerFeatures ()Ljava/util/List;
	METHOD f getTemperatureCategory ()Lbio$c;
	METHOD g getDepth ()F
	METHOD h getDownfall ()F
	METHOD i getName ()Ljo;
	METHOD j getDescriptionId ()Ljava/lang/String;
	METHOD k getScale ()F
	METHOD l getTemperature ()F
	METHOD m getWaterColor ()I
	METHOD n getWaterFogColor ()I
	METHOD o getBiomeCategory ()Lbio$b;
	METHOD p getSurfaceBuilder ()Lcjx;
	METHOD q getSurfaceBuilderConfig ()Lckj;
	METHOD r getParent ()Ljava/lang/String;
	METHOD s lambda$new$1 ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;
	METHOD t lambda$null$0 ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;
