CLASS bld net/minecraft/world/level/biome/Biome
	FIELD a LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD b EXPLORABLE_BIOMES Ljava/util/Set;
	FIELD c MUTATED_BIOMES Lft;
	FIELD d TEMPERATURE_NOISE Lcoy;
	FIELD e BIOME_INFO_NOISE Lcoy;
	FIELD f descriptionId Ljava/lang/String;
	FIELD g depth F
	FIELD h scale F
	FIELD i temperature F
	FIELD j downfall F
	FIELD k parent Ljava/lang/String;
	FIELD l surfaceBuilder Lcod;
	FIELD m biomeCategory Lbld$b;
	FIELD n precipitation Lbld$e;
	FIELD o specialEffects Lblj;
	FIELD p carvers Ljava/util/Map;
	FIELD q features Ljava/util/Map;
	FIELD r flowerFeatures Ljava/util/List;
	FIELD s validFeatureStarts Ljava/util/Map;
	FIELD t skyColor I
	FIELD u spawners Ljava/util/Map;
	FIELD v temperatureCache Ljava/lang/ThreadLocal;
	FIELD w optimalParameters Ljava/util/List;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lbld$a;)V
	METHOD a getFoliageColor ()I
	METHOD a getGrassColor (DD)I
	METHOD a getBiome (ILbld;)Lbld;
	METHOD a getMobs (Lalj;)Ljava/util/List;
	METHOD a addSpawn (Lalj;Lbld$f;)V
	METHOD a shouldFreeze (Lbki;Lfk;)Z
	METHOD a shouldFreeze (Lbki;Lfk;Z)Z
	METHOD a getFitness (Lbld$d;)F
	METHOD a lambda$getFitness$5 (Lbld$d;Lbld$d;)Ljava/lang/Float;
	METHOD a getMutatedVariant (Lbld;)Lbld;
	METHOD a getCarvers (Lcct$a;)Ljava/util/List;
	METHOD a addCarver (Lcct$a;Lcdi;)V
	METHOD a getFeaturesForStep (Lcct$b;)Ljava/util/List;
	METHOD a generate (Lcct$b;Lcaz;Lbkg;JLcde;Lfk;)V
	METHOD a addFeature (Lcct$b;Lcec;)V
	METHOD a makeCarver (Lcdn;Lcdg;)Lcdi;
	METHOD a addStructureStart (Lcec;)V
	METHOD a isValidStart (Lcgp;)Z
	METHOD a serialize (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;
	METHOD a lambda$null$11 (Lcom/mojang/datafixers/types/DynamicOps;Lbld$f;)Ljava/lang/Object;
	METHOD a lambda$null$6 (Lcom/mojang/datafixers/types/DynamicOps;Lcdi;)Ljava/lang/Object;
	METHOD a lambda$null$8 (Lcom/mojang/datafixers/types/DynamicOps;Lcec;)Ljava/lang/Object;
	METHOD a lambda$serialize$12 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD a getTemperatureNoCache (Lfk;)F
	METHOD a buildSurfaceAt (Ljava/util/Random;Lcax;IIIDLbzh;Lbzh;IJ)V
	METHOD b isMutated ()Z
	METHOD b shouldSnow (Lbki;Lfk;)Z
	METHOD b lambda$getCarvers$3 (Lcct$a;)Ljava/util/List;
	METHOD b lambda$generate$4 (Lcec;)Ljava/lang/String;
	METHOD b getStructureConfiguration (Lcgp;)Lchs;
	METHOD b lambda$serialize$10 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD b getTemperature (Lfk;)F
	METHOD c getSkyColor ()I
	METHOD c lambda$addCarver$2 (Lcct$a;)Ljava/util/List;
	METHOD c lambda$serialize$9 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD d getPrecipitation ()Lbld$e;
	METHOD d lambda$serialize$7 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD e isHumid ()Z
	METHOD f getCreatureProbability ()F
	METHOD g getFlowerFeatures ()Ljava/util/List;
	METHOD h getFogColor ()I
	METHOD i getTemperatureCategory ()Lbld$c;
	METHOD j getDepth ()F
	METHOD k getDownfall ()F
	METHOD l getName ()Llf;
	METHOD m getDescriptionId ()Ljava/lang/String;
	METHOD n getScale ()F
	METHOD o getTemperature ()F
	METHOD p getSpecialEffects ()Lblj;
	METHOD q getWaterColor ()I
	METHOD r getWaterFogColor ()I
	METHOD s getAmbientParticle ()Ljava/util/Optional;
	METHOD t getBiomeCategory ()Lbld$b;
	METHOD u getSurfaceBuilder ()Lcod;
	METHOD v getSurfaceBuilderConfig ()Lcos;
	METHOD w getParent ()Ljava/lang/String;
	METHOD x calculateSkyColor ()I
	METHOD y lambda$new$1 ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;
	METHOD z lambda$null$0 ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;
	CLASS 1 1
		FIELD a this$0 Lbld;
		METHOD <init> <init> (Lbld;IF)V
		METHOD rehash rehash (I)V
	CLASS a BiomeBuilder
		FIELD a surfaceBuilder Lcod;
		FIELD b precipitation Lbld$e;
		FIELD c biomeCategory Lbld$b;
		FIELD d depth Ljava/lang/Float;
		FIELD e scale Ljava/lang/Float;
		FIELD f temperature Ljava/lang/Float;
		FIELD g downfall Ljava/lang/Float;
		FIELD h parent Ljava/lang/String;
		FIELD i optimalParameters Ljava/util/List;
		FIELD j specialEffects Lblj;
		METHOD <init> <init> ()V
		METHOD a depth (F)Lbld$a;
		METHOD a access$000 (Lbld$a;)Lcod;
		METHOD a biomeCategory (Lbld$b;)Lbld$a;
		METHOD a precipitation (Lbld$e;)Lbld$a;
		METHOD a specialEffects (Lblj;)Lbld$a;
		METHOD a surfaceBuilder (Lcod;)Lbld$a;
		METHOD a surfaceBuilder (Lcoq;Lcos;)Lbld$a;
		METHOD a parent (Ljava/lang/String;)Lbld$a;
		METHOD a optimalParameters (Ljava/util/List;)Lbld$a;
		METHOD b scale (F)Lbld$a;
		METHOD b access$100 (Lbld$a;)Lbld$e;
		METHOD c temperature (F)Lbld$a;
		METHOD c access$200 (Lbld$a;)Lbld$b;
		METHOD d downfall (F)Lbld$a;
		METHOD d access$300 (Lbld$a;)Ljava/lang/Float;
		METHOD e access$400 (Lbld$a;)Ljava/lang/Float;
		METHOD f access$500 (Lbld$a;)Ljava/lang/Float;
		METHOD g access$600 (Lbld$a;)Ljava/lang/Float;
		METHOD h access$700 (Lbld$a;)Lblj;
		METHOD i access$800 (Lbld$a;)Ljava/lang/String;
		METHOD j access$900 (Lbld$a;)Ljava/util/List;
		METHOD toString toString ()Ljava/lang/String;
	CLASS b BiomeCategory
		FIELD a NONE Lbld$b;
		FIELD b TAIGA Lbld$b;
		FIELD c EXTREME_HILLS Lbld$b;
		FIELD d JUNGLE Lbld$b;
		FIELD e MESA Lbld$b;
		FIELD f PLAINS Lbld$b;
		FIELD g SAVANNA Lbld$b;
		FIELD h ICY Lbld$b;
		FIELD i THEEND Lbld$b;
		FIELD j BEACH Lbld$b;
		FIELD k FOREST Lbld$b;
		FIELD l OCEAN Lbld$b;
		FIELD m DESERT Lbld$b;
		FIELD n RIVER Lbld$b;
		FIELD o SWAMP Lbld$b;
		FIELD p MUSHROOM Lbld$b;
		FIELD q NETHER Lbld$b;
		FIELD r BY_NAME Ljava/util/Map;
		FIELD s name Ljava/lang/String;
		FIELD t $VALUES [Lbld$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a lambda$static$0 (Lbld$b;)Lbld$b;
		METHOD a byName (Ljava/lang/String;)Lbld$b;
		METHOD valueOf valueOf (Ljava/lang/String;)Lbld$b;
		METHOD values values ()[Lbld$b;
	CLASS c BiomeTempCategory
		FIELD a OCEAN Lbld$c;
		FIELD b COLD Lbld$c;
		FIELD c MEDIUM Lbld$c;
		FIELD d WARM Lbld$c;
		FIELD e BY_NAME Ljava/util/Map;
		FIELD f name Ljava/lang/String;
		FIELD g $VALUES [Lbld$c;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a lambda$static$0 (Lbld$c;)Lbld$c;
		METHOD a byName (Ljava/lang/String;)Lbld$c;
		METHOD valueOf valueOf (Ljava/lang/String;)Lbld$c;
		METHOD values values ()[Lbld$c;
	CLASS d ClimateParameters
		FIELD a temperature F
		FIELD b humidity F
		FIELD c altitude F
		FIELD d weirdness F
		FIELD e weight F
		METHOD <init> <init> (FFFFF)V
		METHOD a fitness (Lbld$d;)F
		METHOD equals equals (Ljava/lang/Object;)Z
		METHOD hashCode hashCode ()I
	CLASS e Precipitation
		FIELD a NONE Lbld$e;
		FIELD b RAIN Lbld$e;
		FIELD c SNOW Lbld$e;
		FIELD d BY_NAME Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		FIELD f $VALUES [Lbld$e;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a lambda$static$0 (Lbld$e;)Lbld$e;
		METHOD a byName (Ljava/lang/String;)Lbld$e;
		METHOD valueOf valueOf (Ljava/lang/String;)Lbld$e;
		METHOD values values ()[Lbld$e;
	CLASS f SpawnerData
		FIELD b type Lalc;
		FIELD c minCount I
		FIELD d maxCount I
		METHOD <init> <init> (Lalc;III)V
		METHOD a lambda$deserialize$0 (Lalc;)Z
		METHOD a deserialize (Lcom/mojang/datafixers/Dynamic;)Lbld$f;
		METHOD a serialize (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;
		METHOD toString toString ()Ljava/lang/String;
