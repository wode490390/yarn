CLASS boy net/minecraft/world/level/biome/Biome
	FIELD a LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD b EXPLORABLE_BIOMES Ljava/util/Set;
	FIELD c MUTATED_BIOMES Lfz;
	FIELD d TEMPERATURE_NOISE Lcvs;
	FIELD e BIOME_INFO_NOISE Lcvs;
	FIELD f descriptionId Ljava/lang/String;
	FIELD g depth F
	FIELD h scale F
	FIELD i temperature F
	FIELD j downfall F
	FIELD k parent Ljava/lang/String;
	FIELD l surfaceBuilder Lcuy;
	FIELD m biomeCategory Lboy$b;
	FIELD n precipitation Lboy$e;
	FIELD o specialEffects Lbpf;
	FIELD p carvers Ljava/util/Map;
	FIELD q features Ljava/util/Map;
	FIELD r flowerFeatures Ljava/util/List;
	FIELD s validFeatureStarts Ljava/util/Map;
	FIELD t skyColor I
	FIELD u spawners Ljava/util/Map;
	FIELD v temperatureCache Ljava/lang/ThreadLocal;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lboy$a;)V
	METHOD A calculateSkyColor ()I
	METHOD B lambda$new$1 ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;
	METHOD C lambda$null$0 ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;
	METHOD a getFoliageColor ()I
	METHOD a getGrassColor (DD)I
	METHOD a getBiome (ILboy;)Lboy;
	METHOD a getMobs (Lano;)Ljava/util/List;
	METHOD a addSpawn (Lano;Lboy$f;)V
	METHOD a shouldFreeze (Lboa;Lfo;)Z
	METHOD a shouldFreeze (Lboa;Lfo;Z)Z
	METHOD a surfaceBuilderCap (Lboy$a;Lcvk;Ljava/util/Random;)Lboy$a;
	METHOD a getMutatedVariant (Lboy;)Lboy;
	METHOD a getCarvers (Lcjb$a;)Ljava/util/List;
	METHOD a addCarver (Lcjb$a;Lcjq;)V
	METHOD a getFeaturesForStep (Lcjb$b;)Ljava/util/List;
	METHOD a generate (Lcjb$b;Lcfl;Lbny;JLcjm;Lfo;)V
	METHOD a addFeature (Lcjb$b;Lckm;)V
	METHOD a makeCarver (Lcjw;Lcjo;)Lcjq;
	METHOD a makeRandomCarver (Lcjw;Ljava/util/Random;)Lcjq;
	METHOD a addStructureStart (Lckm;)V
	METHOD a isValidStart (Lcna;)Z
	METHOD a serialize (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;
	METHOD a lambda$null$10 (Lcom/mojang/datafixers/types/DynamicOps;Lboy$f;)Ljava/lang/Object;
	METHOD a lambda$null$5 (Lcom/mojang/datafixers/types/DynamicOps;Lcjq;)Ljava/lang/Object;
	METHOD a lambda$null$7 (Lcom/mojang/datafixers/types/DynamicOps;Lckm;)Ljava/lang/Object;
	METHOD a lambda$serialize$11 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD a getTemperatureNoCache (Lfo;)F
	METHOD a random (Ljava/util/Random;)Lboy$a;
	METHOD a buildSurfaceAt (Ljava/util/Random;Lcfj;IIIDLcdt;Lcdt;IJ)V
	METHOD b isMutated ()Z
	METHOD b shouldSnow (Lboa;Lfo;)Z
	METHOD b lambda$getCarvers$3 (Lcjb$a;)Ljava/util/List;
	METHOD b lambda$generate$4 (Lckm;)Ljava/lang/String;
	METHOD b getStructureConfiguration (Lcna;)Lcof;
	METHOD b lambda$serialize$9 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD b getTemperature (Lfo;)F
	METHOD c getSkyColor ()I
	METHOD c lambda$addCarver$2 (Lcjb$a;)Ljava/util/List;
	METHOD c lambda$serialize$8 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD d getPrecipitation ()Lboy$e;
	METHOD d lambda$serialize$6 (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;
	METHOD e isHumid ()Z
	METHOD f getCreatureProbability ()F
	METHOD g getFlowerFeatures ()Ljava/util/List;
	METHOD h getFogColor ()I
	METHOD i getTemperatureCategory ()Lboy$c;
	METHOD j getDepth ()F
	METHOD k getDownfall ()F
	METHOD l getName ()Lml;
	METHOD m getDescriptionId ()Ljava/lang/String;
	METHOD n getScale ()F
	METHOD o getTemperature ()F
	METHOD p getSpecialEffects ()Lbpf;
	METHOD q getWaterColor ()I
	METHOD r getWaterFogColor ()I
	METHOD s getAmbientParticle ()Ljava/util/Optional;
	METHOD t getAmbientLoop ()Ljava/util/Optional;
	METHOD u getAmbientMood ()Ljava/util/Optional;
	METHOD v getAmbientAdditions ()Ljava/util/Optional;
	METHOD w getBiomeCategory ()Lboy$b;
	METHOD x getSurfaceBuilder ()Lcuy;
	METHOD y getSurfaceBuilderConfig ()Lcvm;
	METHOD z getParent ()Ljava/lang/String;
	CLASS 1 1
		FIELD a this$0 Lboy;
		METHOD <init> <init> (Lboy;IF)V
		METHOD rehash rehash (I)V
	CLASS a BiomeBuilder
		FIELD a surfaceBuilder Lcuy;
		FIELD b precipitation Lboy$e;
		FIELD c biomeCategory Lboy$b;
		FIELD d depth Ljava/lang/Float;
		FIELD e scale Ljava/lang/Float;
		FIELD f temperature Ljava/lang/Float;
		FIELD g downfall Ljava/lang/Float;
		FIELD h parent Ljava/lang/String;
		FIELD i specialEffects Lbpf;
		METHOD <init> <init> ()V
		METHOD a depth (F)Lboy$a;
		METHOD a access$000 (Lboy$a;)Lcuy;
		METHOD a biomeCategory (Lboy$b;)Lboy$a;
		METHOD a precipitation (Lboy$e;)Lboy$a;
		METHOD a specialEffects (Lbpf;)Lboy$a;
		METHOD a surfaceBuilder (Lcuy;)Lboy$a;
		METHOD a surfaceBuilder (Lcvk;Lcvm;)Lboy$a;
		METHOD a parent (Ljava/lang/String;)Lboy$a;
		METHOD b scale (F)Lboy$a;
		METHOD b access$100 (Lboy$a;)Lboy$e;
		METHOD c temperature (F)Lboy$a;
		METHOD c access$200 (Lboy$a;)Lboy$b;
		METHOD d downfall (F)Lboy$a;
		METHOD d access$300 (Lboy$a;)Ljava/lang/Float;
		METHOD e access$400 (Lboy$a;)Ljava/lang/Float;
		METHOD f access$500 (Lboy$a;)Ljava/lang/Float;
		METHOD g access$600 (Lboy$a;)Ljava/lang/Float;
		METHOD h access$700 (Lboy$a;)Lbpf;
		METHOD i access$800 (Lboy$a;)Ljava/lang/String;
		METHOD toString toString ()Ljava/lang/String;
	CLASS b BiomeCategory
		FIELD a NONE Lboy$b;
		FIELD b TAIGA Lboy$b;
		FIELD c EXTREME_HILLS Lboy$b;
		FIELD d JUNGLE Lboy$b;
		FIELD e MESA Lboy$b;
		FIELD f PLAINS Lboy$b;
		FIELD g SAVANNA Lboy$b;
		FIELD h ICY Lboy$b;
		FIELD i THEEND Lboy$b;
		FIELD j BEACH Lboy$b;
		FIELD k FOREST Lboy$b;
		FIELD l OCEAN Lboy$b;
		FIELD m DESERT Lboy$b;
		FIELD n RIVER Lboy$b;
		FIELD o SWAMP Lboy$b;
		FIELD p MUSHROOM Lboy$b;
		FIELD q NETHER Lboy$b;
		FIELD r BY_NAME Ljava/util/Map;
		FIELD s name Ljava/lang/String;
		FIELD t $VALUES [Lboy$b;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a lambda$static$0 (Lboy$b;)Lboy$b;
		METHOD a byName (Ljava/lang/String;)Lboy$b;
		METHOD valueOf valueOf (Ljava/lang/String;)Lboy$b;
		METHOD values values ()[Lboy$b;
	CLASS c BiomeTempCategory
		FIELD a OCEAN Lboy$c;
		FIELD b COLD Lboy$c;
		FIELD c MEDIUM Lboy$c;
		FIELD d WARM Lboy$c;
		FIELD e BY_NAME Ljava/util/Map;
		FIELD f name Ljava/lang/String;
		FIELD g $VALUES [Lboy$c;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a lambda$static$0 (Lboy$c;)Lboy$c;
		METHOD a byName (Ljava/lang/String;)Lboy$c;
		METHOD valueOf valueOf (Ljava/lang/String;)Lboy$c;
		METHOD values values ()[Lboy$c;
	CLASS d ClimateParameters
		FIELD a temperature F
		FIELD b humidity F
		FIELD c altitude F
		FIELD d weirdness F
		FIELD e weight F
		METHOD <init> <init> (FFFFF)V
		METHOD a fitness (Lboy$d;)F
		METHOD a serialize (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;
		METHOD a random (Ljava/util/Random;)Lboy$d;
		METHOD b randomList (Ljava/util/Random;)Ljava/util/List;
		METHOD equals equals (Ljava/lang/Object;)Z
		METHOD hashCode hashCode ()I
	CLASS e Precipitation
		FIELD a NONE Lboy$e;
		FIELD b RAIN Lboy$e;
		FIELD c SNOW Lboy$e;
		FIELD d BY_NAME Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		FIELD f $VALUES [Lboy$e;
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (Ljava/lang/String;ILjava/lang/String;)V
		METHOD a getName ()Ljava/lang/String;
		METHOD a lambda$static$0 (Lboy$e;)Lboy$e;
		METHOD a byName (Ljava/lang/String;)Lboy$e;
		METHOD valueOf valueOf (Ljava/lang/String;)Lboy$e;
		METHOD values values ()[Lboy$e;
	CLASS f SpawnerData
		FIELD b type Lanf;
		FIELD c minCount I
		FIELD d maxCount I
		METHOD <init> <init> (Lanf;III)V
		METHOD a lambda$deserialize$0 (Lanf;)Z
		METHOD a deserialize (Lcom/mojang/datafixers/Dynamic;)Lboy$f;
		METHOD a serialize (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;
		METHOD toString toString ()Ljava/lang/String;
