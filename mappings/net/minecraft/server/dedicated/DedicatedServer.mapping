CLASS aak net/minecraft/server/dedicated/DedicatedServer
	FIELD p LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD q CONVERSION_RETRY_DELAY_MS I
	FIELD r CONVERSION_RETRIES I
	FIELD s SHA1 Ljava/util/regex/Pattern;
	FIELD t consoleInput Ljava/util/List;
	FIELD u queryThreadGs4 Laep;
	FIELD v rconConsoleSource Laem;
	FIELD w rconThread Laer;
	FIELD x settings Laam;
	FIELD y gui Laaq;
	FIELD z textFilterClient Lach;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Ljava/lang/Thread;Lgs$b;Ldgz$a;Lada;Lxd;Ldhg;Laam;Lcom/mojang/datafixers/DataFixer;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Ladv;Labt;)V
	METHOD C isNetherEnabled ()Z
	METHOD Q isSpawningMonsters ()Z
	METHOD R_ shouldInformAdmins ()Z
	METHOD U isSnooperEnabled ()Z
	METHOD X isSpawningAnimals ()Z
	METHOD Y areNpcsEnabled ()Z
	METHOD a lambda$setPlayerIdleTimeout$2 (ILaal;)Laal;
	METHOD a isUnderSpawnProtection (Labj;Lgb;Lbjf;)Z
	METHOD a createTextFilterForPlayer (Labk;)Lacg;
	METHOD a populateSnooper (Larn;)V
	METHOD a isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z
	METHOD a runCommand (Ljava/lang/String;)Ljava/lang/String;
	METHOD a handleConsoleInput (Ljava/lang/String;Ldg;)V
	METHOD a lambda$storeUsingWhiteList$4 (ZLaal;)Laal;
	METHOD aT forceSynchronousWrites ()Z
	METHOD aX isResourcePackRequired ()Z
	METHOD aY getForcedGameType ()Lbvo;
	METHOD ad getPlayerList ()Ladz;
	METHOD ag hasGui ()Z
	METHOD aj getSpawnProtectionRadius ()I
	METHOD ak repliesToStatus ()Z
	METHOD as getAbsoluteMaxWorldSize ()I
	METHOD av getCompressionThreshold ()I
	METHOD b getScaledTrackingDistance (I)I
	METHOD b tickChildren (Ljava/util/function/BooleanSupplier;)V
	METHOD b fillReport (Lq;)Lq;
	METHOD bb getPackHash ()Ljava/lang/String;
	METHOD bc handleConsoleInputs ()V
	METHOD bd getPlayerList ()Laaj;
	METHOD be showGui ()V
	METHOD bf convertOldUsers ()Z
	METHOD bg getMaxTickLength ()J
	METHOD bh access$000 ()Lorg/apache/logging/log4j/Logger;
	METHOD bq waitForRetry ()V
	METHOD br lambda$fillReport$1 ()Ljava/lang/String;
	METHOD bs lambda$fillReport$0 ()Ljava/lang/String;
	METHOD c setPlayerIdleTimeout (I)V
	METHOD d initServer ()Z
	METHOD e onServerExit ()V
	METHOD f isHardcore ()Z
	METHOD f lambda$runCommand$3 (Ljava/lang/String;)V
	METHOD f_ getProperties ()Laal;
	METHOD g getOperatorUserPermissionLevel ()I
	METHOD g_ getServerIp ()Ljava/lang/String;
	METHOD h getFunctionCompilationLevel ()I
	METHOD h_ getServerName ()Ljava/lang/String;
	METHOD i shouldRconBroadcast ()Z
	METHOD i storeUsingWhiteList (Z)V
	METHOD i_ getPluginNames ()Ljava/lang/String;
	METHOD j isDedicatedServer ()Z
	METHOD j_ getLevelIdName ()Ljava/lang/String;
	METHOD k getRateLimitPacketsPerSecond ()I
	METHOD l isEpollEnabled ()Z
	METHOD m isCommandBlockEnabled ()Z
	METHOD n isPublished ()Z
	METHOD o getModdedStatus ()Ljava/util/Optional;
	METHOD p getServerPort ()I
	METHOD q forceDifficulty ()V
	METHOD t stopServer ()V
	CLASS 1 1
		FIELD a this$0 Laak;
		METHOD <init> <init> (Laak;Ljava/lang/String;)V
		METHOD run run ()V
