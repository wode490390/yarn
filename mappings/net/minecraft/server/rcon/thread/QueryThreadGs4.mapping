CLASS yk net/minecraft/server/rcon/thread/QueryThreadGs4
	CLASS a RequestChallenge
		FIELD a this$0 Lyk;
		FIELD b time J
		FIELD c challenge I
		FIELD d identBytes [B
		FIELD e challengeBytes [B
		FIELD f ident Ljava/lang/String;
		METHOD <init> <init> (Lyk;Ljava/net/DatagramPacket;)V
		METHOD a getChallenge ()I
		METHOD a before (J)Ljava/lang/Boolean;
		METHOD b getChallengeBytes ()[B
		METHOD c getIdentBytes ()[B
		METHOD d getIdent ()Ljava/lang/String;
	FIELD h lastChallengeCheck J
	FIELD i port I
	FIELD j serverPort I
	FIELD k maxPlayers I
	FIELD l serverName Ljava/lang/String;
	FIELD m worldName Ljava/lang/String;
	FIELD n socket Ljava/net/DatagramSocket;
	FIELD o buffer [B
	FIELD p request Ljava/net/DatagramPacket;
	FIELD q idents Ljava/util/Map;
	FIELD r hostIp Ljava/lang/String;
	FIELD s serverIp Ljava/lang/String;
	FIELD t validChallenges Ljava/util/Map;
	FIELD u lastChallengeClean J
	FIELD v rulesResponse Lyf;
	FIELD w lastRulesResponse J
	METHOD <init> <init> (Lri;)V
	METHOD a start ()V
	METHOD a recoverSocketError (Ljava/lang/Exception;)V
	METHOD a processPacket (Ljava/net/DatagramPacket;)Z
	METHOD a getIdentBytes (Ljava/net/SocketAddress;)[B
	METHOD a sendTo ([BLjava/net/DatagramPacket;)V
	METHOD b buildRuleResponse (Ljava/net/DatagramPacket;)[B
	METHOD c validChallenge (Ljava/net/DatagramPacket;)Ljava/lang/Boolean;
	METHOD d sendChallenge (Ljava/net/DatagramPacket;)V
	METHOD f pruneChallenges ()V
	METHOD g initSocket ()Z
	METHOD run run ()V
