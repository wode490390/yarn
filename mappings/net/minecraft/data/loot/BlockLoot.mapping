CLASS gy net/minecraft/data/loot/BlockLoot
	FIELD a HAS_SILK_TOUCH Lcrk$a;
	FIELD b HAS_NO_SILK_TOUCH Lcrk$a;
	FIELD c HAS_SHEARS Lcrk$a;
	FIELD d HAS_SHEARS_OR_SILK_TOUCH Lcrk$a;
	FIELD e HAS_NO_SHEARS_OR_SILK_TOUCH Lcrk$a;
	FIELD f EXPLOSION_RESISTANT Ljava/util/Set;
	FIELD g NORMAL_LEAVES_SAPLING_CHANCES [F
	FIELD h JUNGLE_LEAVES_SAPLING_CHANGES [F
	FIELD i map Ljava/util/Map;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> ()V
	METHOD A lambda$accept$59 (Lbmv;)Lcpb$a;
	METHOD B lambda$accept$58 (Lbmv;)Lcpb$a;
	METHOD C lambda$accept$57 (Lbmv;)Lcpb$a;
	METHOD D lambda$accept$56 (Lbmv;)Lcpb$a;
	METHOD E lambda$accept$55 (Lbmv;)Lcpb$a;
	METHOD F lambda$accept$50 (Lbmv;)Lcpb$a;
	METHOD G lambda$accept$49 (Lbmv;)Lcpb$a;
	METHOD H lambda$accept$48 (Lbmv;)Lcpb$a;
	METHOD I lambda$accept$47 (Lbmv;)Lcpb$a;
	METHOD J lambda$accept$46 (Lbmv;)Lcpb$a;
	METHOD K lambda$accept$45 (Lbmv;)Lcpb$a;
	METHOD L lambda$accept$44 (Lbmv;)Lcpb$a;
	METHOD M lambda$accept$43 (Lbmv;)Lcpb$a;
	METHOD N lambda$accept$42 (Lbmv;)Lcpb$a;
	METHOD O lambda$accept$41 (Lbmv;)Lcpb$a;
	METHOD P lambda$accept$40 (Lbmv;)Lcpb$a;
	METHOD Q lambda$accept$39 (Lbmv;)Lcpb$a;
	METHOD R lambda$accept$38 (Lbmv;)Lcpb$a;
	METHOD S lambda$accept$37 (Lbmv;)Lcpb$a;
	METHOD T lambda$accept$36 (Lbmv;)Lcpb$a;
	METHOD U lambda$accept$35 (Lbmv;)Lcpb$a;
	METHOD V lambda$accept$34 (Lbmv;)Lcpb$a;
	METHOD W lambda$accept$33 (Lbmv;)Lcpb$a;
	METHOD X lambda$accept$32 (Lbmv;)Lcpb$a;
	METHOD Y lambda$accept$31 (Lbmv;)Lcpb$a;
	METHOD Z lambda$accept$30 (Lbmv;)Lcpb$a;
	METHOD a noDrop ()Lcpb$a;
	METHOD a createSingleItemTable (Lbhq;)Lcpb$a;
	METHOD a createSingleItemTable (Lbhq;Lcpe;)Lcpb$a;
	METHOD a applyExplosionDecay (Lbhq;Lcqe;)Ljava/lang/Object;
	METHOD a applyExplosionCondition (Lbhq;Lcrd;)Ljava/lang/Object;
	METHOD a dropPottedContents (Lbmv;)V
	METHOD a createOreDrop (Lbmv;Lbce;)Lcpb$a;
	METHOD a createCropDrops (Lbmv;Lbce;Lbce;Lcrk$a;)Lcpb$a;
	METHOD a dropOther (Lbmv;Lbhq;)V
	METHOD a createSingleItemTableWithSilkTouch (Lbmv;Lbhq;Lcpe;)Lcpb$a;
	METHOD a otherWhenSilkTouch (Lbmv;Lbmv;)V
	METHOD a createLeavesDrops (Lbmv;Lbmv;[F)Lcpb$a;
	METHOD a createSinglePropConditionTable (Lbmv;Lbww;Ljava/lang/Comparable;)Lcpb$a;
	METHOD a add (Lbmv;Lcpb$a;)V
	METHOD a createSilkTouchDispatchTable (Lbmv;Lcpq$a;)Lcpb$a;
	METHOD a createSelfDropDispatchTable (Lbmv;Lcrk$a;Lcpq$a;)Lcpb$a;
	METHOD a add (Lbmv;Ljava/util/function/Function;)V
	METHOD a lambda$accept$54 (Lcrk$a;Lbmv;)Lcpb$a;
	METHOD a accept (Ljava/util/function/BiConsumer;)V
	METHOD aA lambda$accept$3 (Lbmv;)Lcpb$a;
	METHOD aB lambda$accept$2 (Lbmv;)Lcpb$a;
	METHOD aC lambda$accept$1 (Lbmv;)Lcpb$a;
	METHOD aD lambda$accept$0 (Lbmv;)Lcpb$a;
	METHOD aa lambda$accept$29 (Lbmv;)Lcpb$a;
	METHOD ab lambda$accept$28 (Lbmv;)Lcpb$a;
	METHOD ac lambda$accept$27 (Lbmv;)Lcpb$a;
	METHOD accept accept (Ljava/lang/Object;)V
	METHOD ad lambda$accept$26 (Lbmv;)Lcpb$a;
	METHOD ae lambda$accept$25 (Lbmv;)Lcpb$a;
	METHOD af lambda$accept$24 (Lbmv;)Lcpb$a;
	METHOD ag lambda$accept$23 (Lbmv;)Lcpb$a;
	METHOD ah lambda$accept$22 (Lbmv;)Lcpb$a;
	METHOD ai lambda$accept$21 (Lbmv;)Lcpb$a;
	METHOD aj lambda$accept$20 (Lbmv;)Lcpb$a;
	METHOD ak lambda$accept$19 (Lbmv;)Lcpb$a;
	METHOD al lambda$accept$18 (Lbmv;)Lcpb$a;
	METHOD am lambda$accept$17 (Lbmv;)Lcpb$a;
	METHOD an lambda$accept$16 (Lbmv;)Lcpb$a;
	METHOD ao lambda$accept$15 (Lbmv;)Lcpb$a;
	METHOD ap lambda$accept$14 (Lbmv;)Lcpb$a;
	METHOD aq lambda$accept$13 (Lbmv;)Lcpb$a;
	METHOD ar lambda$accept$12 (Lbmv;)Lcpb$a;
	METHOD as lambda$accept$11 (Lbmv;)Lcpb$a;
	METHOD at lambda$accept$10 (Lbmv;)Lcpb$a;
	METHOD au lambda$accept$9 (Lbmv;)Lcpb$a;
	METHOD av lambda$accept$8 (Lbmv;)Lcpb$a;
	METHOD aw lambda$accept$7 (Lbmv;)Lcpb$a;
	METHOD ax lambda$accept$6 (Lbmv;)Lcpb$a;
	METHOD ay lambda$accept$5 (Lbmv;)Lcpb$a;
	METHOD az lambda$accept$4 (Lbmv;)Lcpb$a;
	METHOD b createSilkTouchOnlyTable (Lbhq;)Lcpb$a;
	METHOD b dropWhenSilkTouch (Lbmv;)V
	METHOD b createStemDrops (Lbmv;Lbce;)Lcpb$a;
	METHOD b createSingleItemTableWithSilkTouch (Lbmv;Lbhq;)Lcpb$a;
	METHOD b createOakLeavesDrops (Lbmv;Lbmv;[F)Lcpb$a;
	METHOD b createShearsDispatchTable (Lbmv;Lcpq$a;)Lcpb$a;
	METHOD b lambda$accept$53 (Lcrk$a;Lbmv;)Lcpb$a;
	METHOD c createPotFlowerItemTable (Lbhq;)Lcpb$a;
	METHOD c dropSelf (Lbmv;)V
	METHOD c createMushroomBlockDrop (Lbmv;Lbhq;)Lcpb$a;
	METHOD c createSilkTouchOrShearsDispatchTable (Lbmv;Lcpq$a;)Lcpb$a;
	METHOD c lambda$accept$52 (Lcrk$a;Lbmv;)Lcpb$a;
	METHOD d createShearsOnlyDrop (Lbhq;)Lcpb$a;
	METHOD d createSlabItemTable (Lbmv;)Lcpb$a;
	METHOD d lambda$accept$51 (Lcrk$a;Lbmv;)Lcpb$a;
	METHOD e createNameableBlockEntityTable (Lbmv;)Lcpb$a;
	METHOD f createShulkerBoxDrop (Lbmv;)Lcpb$a;
	METHOD g createBannerDrop (Lbmv;)Lcpb$a;
	METHOD h createGrassDrops (Lbmv;)Lcpb$a;
	METHOD i lambda$dropPottedContents$77 (Lbmv;)Lcpb$a;
	METHOD j lambda$accept$76 (Lbmv;)Lcpb$a;
	METHOD k lambda$accept$75 (Lbmv;)Lcpb$a;
	METHOD l lambda$accept$74 (Lbmv;)Lcpb$a;
	METHOD m lambda$accept$73 (Lbmv;)Lcpb$a;
	METHOD n lambda$accept$72 (Lbmv;)Lcpb$a;
	METHOD o lambda$accept$71 (Lbmv;)Lcpb$a;
	METHOD p lambda$accept$70 (Lbmv;)Lcpb$a;
	METHOD q lambda$accept$69 (Lbmv;)Lcpb$a;
	METHOD r lambda$accept$68 (Lbmv;)Lcpb$a;
	METHOD s lambda$accept$67 (Lbmv;)Lcpb$a;
	METHOD t lambda$accept$66 (Lbmv;)Lcpb$a;
	METHOD u lambda$accept$65 (Lbmv;)Lcpb$a;
	METHOD v lambda$accept$64 (Lbmv;)Lcpb$a;
	METHOD w lambda$accept$63 (Lbmv;)Lcpb$a;
	METHOD x lambda$accept$62 (Lbmv;)Lcpb$a;
	METHOD y lambda$accept$61 (Lbmv;)Lcpb$a;
	METHOD z lambda$accept$60 (Lbmv;)Lcpb$a;
