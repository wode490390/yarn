CLASS hm net/minecraft/data/loot/BlockLoot
	FIELD a HAS_SILK_TOUCH Lcvv$a;
	FIELD b HAS_NO_SILK_TOUCH Lcvv$a;
	FIELD c HAS_SHEARS Lcvv$a;
	FIELD d HAS_SHEARS_OR_SILK_TOUCH Lcvv$a;
	FIELD e HAS_NO_SHEARS_OR_SILK_TOUCH Lcvv$a;
	FIELD f EXPLOSION_RESISTANT Ljava/util/Set;
	FIELD g NORMAL_LEAVES_SAPLING_CHANCES [F
	FIELD h JUNGLE_LEAVES_SAPLING_CHANGES [F
	FIELD i map Ljava/util/Map;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> ()V
	METHOD A lambda$accept$59 (Lbpy;)Lctj$a;
	METHOD B lambda$accept$58 (Lbpy;)Lctj$a;
	METHOD C lambda$accept$57 (Lbpy;)Lctj$a;
	METHOD D lambda$accept$56 (Lbpy;)Lctj$a;
	METHOD E lambda$accept$55 (Lbpy;)Lctj$a;
	METHOD F lambda$accept$54 (Lbpy;)Lctj$a;
	METHOD G lambda$accept$53 (Lbpy;)Lctj$a;
	METHOD H lambda$accept$52 (Lbpy;)Lctj$a;
	METHOD I lambda$accept$51 (Lbpy;)Lctj$a;
	METHOD J lambda$accept$50 (Lbpy;)Lctj$a;
	METHOD K lambda$accept$49 (Lbpy;)Lctj$a;
	METHOD L lambda$accept$48 (Lbpy;)Lctj$a;
	METHOD M lambda$accept$47 (Lbpy;)Lctj$a;
	METHOD N lambda$accept$46 (Lbpy;)Lctj$a;
	METHOD O lambda$accept$45 (Lbpy;)Lctj$a;
	METHOD P lambda$accept$44 (Lbpy;)Lctj$a;
	METHOD Q lambda$accept$43 (Lbpy;)Lctj$a;
	METHOD R lambda$accept$42 (Lbpy;)Lctj$a;
	METHOD S lambda$accept$41 (Lbpy;)Lctj$a;
	METHOD T lambda$accept$40 (Lbpy;)Lctj$a;
	METHOD U lambda$accept$39 (Lbpy;)Lctj$a;
	METHOD V lambda$accept$38 (Lbpy;)Lctj$a;
	METHOD W lambda$accept$37 (Lbpy;)Lctj$a;
	METHOD X lambda$accept$36 (Lbpy;)Lctj$a;
	METHOD Y lambda$accept$35 (Lbpy;)Lctj$a;
	METHOD Z lambda$accept$34 (Lbpy;)Lctj$a;
	METHOD a noDrop ()Lctj$a;
	METHOD a createSingleItemTable (Lbke;)Lctj$a;
	METHOD a createSingleItemTable (Lbke;Lctm;)Lctj$a;
	METHOD a applyExplosionDecay (Lbke;Lcuo;)Ljava/lang/Object;
	METHOD a applyExplosionCondition (Lbke;Lcvo;)Ljava/lang/Object;
	METHOD a dropPottedContents (Lbpy;)V
	METHOD a createOreDrop (Lbpy;Lber;)Lctj$a;
	METHOD a createCropDrops (Lbpy;Lber;Lber;Lcvv$a;)Lctj$a;
	METHOD a dropOther (Lbpy;Lbke;)V
	METHOD a createSingleItemTableWithSilkTouch (Lbpy;Lbke;Lctm;)Lctj$a;
	METHOD a otherWhenSilkTouch (Lbpy;Lbpy;)V
	METHOD a createLeavesDrops (Lbpy;Lbpy;[F)Lctj$a;
	METHOD a createSinglePropConditionTable (Lbpy;Lcak;Ljava/lang/Comparable;)Lctj$a;
	METHOD a add (Lbpy;Lctj$a;)V
	METHOD a createSilkTouchDispatchTable (Lbpy;Lctz$a;)Lctj$a;
	METHOD a createSelfDropDispatchTable (Lbpy;Lcvv$a;Lctz$a;)Lctj$a;
	METHOD a add (Lbpy;Ljava/util/function/Function;)V
	METHOD a accept (Ljava/util/function/BiConsumer;)V
	METHOD aA lambda$accept$7 (Lbpy;)Lctj$a;
	METHOD aB lambda$accept$6 (Lbpy;)Lctj$a;
	METHOD aC lambda$accept$5 (Lbpy;)Lctj$a;
	METHOD aD lambda$accept$4 (Lbpy;)Lctj$a;
	METHOD aE lambda$accept$3 (Lbpy;)Lctj$a;
	METHOD aF lambda$accept$2 (Lbpy;)Lctj$a;
	METHOD aG lambda$accept$1 (Lbpy;)Lctj$a;
	METHOD aH lambda$accept$0 (Lbpy;)Lctj$a;
	METHOD aa lambda$accept$33 (Lbpy;)Lctj$a;
	METHOD ab lambda$accept$32 (Lbpy;)Lctj$a;
	METHOD ac lambda$accept$31 (Lbpy;)Lctj$a;
	METHOD accept accept (Ljava/lang/Object;)V
	METHOD ad lambda$accept$30 (Lbpy;)Lctj$a;
	METHOD ae lambda$accept$29 (Lbpy;)Lctj$a;
	METHOD af lambda$accept$28 (Lbpy;)Lctj$a;
	METHOD ag lambda$accept$27 (Lbpy;)Lctj$a;
	METHOD ah lambda$accept$26 (Lbpy;)Lctj$a;
	METHOD ai lambda$accept$25 (Lbpy;)Lctj$a;
	METHOD aj lambda$accept$24 (Lbpy;)Lctj$a;
	METHOD ak lambda$accept$23 (Lbpy;)Lctj$a;
	METHOD al lambda$accept$22 (Lbpy;)Lctj$a;
	METHOD am lambda$accept$21 (Lbpy;)Lctj$a;
	METHOD an lambda$accept$20 (Lbpy;)Lctj$a;
	METHOD ao lambda$accept$19 (Lbpy;)Lctj$a;
	METHOD ap lambda$accept$18 (Lbpy;)Lctj$a;
	METHOD aq lambda$accept$17 (Lbpy;)Lctj$a;
	METHOD ar lambda$accept$16 (Lbpy;)Lctj$a;
	METHOD as lambda$accept$15 (Lbpy;)Lctj$a;
	METHOD at lambda$accept$14 (Lbpy;)Lctj$a;
	METHOD au lambda$accept$13 (Lbpy;)Lctj$a;
	METHOD av lambda$accept$12 (Lbpy;)Lctj$a;
	METHOD aw lambda$accept$11 (Lbpy;)Lctj$a;
	METHOD ax lambda$accept$10 (Lbpy;)Lctj$a;
	METHOD ay lambda$accept$9 (Lbpy;)Lctj$a;
	METHOD az lambda$accept$8 (Lbpy;)Lctj$a;
	METHOD b createSilkTouchOnlyTable (Lbke;)Lctj$a;
	METHOD b dropWhenSilkTouch (Lbpy;)V
	METHOD b createStemDrops (Lbpy;Lber;)Lctj$a;
	METHOD b createSingleItemTableWithSilkTouch (Lbpy;Lbke;)Lctj$a;
	METHOD b createOakLeavesDrops (Lbpy;Lbpy;[F)Lctj$a;
	METHOD b createShearsDispatchTable (Lbpy;Lctz$a;)Lctj$a;
	METHOD c createPotFlowerItemTable (Lbke;)Lctj$a;
	METHOD c dropSelf (Lbpy;)V
	METHOD c createAttachedStemDrops (Lbpy;Lber;)Lctj$a;
	METHOD c createMushroomBlockDrop (Lbpy;Lbke;)Lctj$a;
	METHOD c createSilkTouchOrShearsDispatchTable (Lbpy;Lctz$a;)Lctj$a;
	METHOD d createShearsOnlyDrop (Lbke;)Lctj$a;
	METHOD d createSlabItemTable (Lbpy;)Lctj$a;
	METHOD e createNameableBlockEntityTable (Lbpy;)Lctj$a;
	METHOD f createShulkerBoxDrop (Lbpy;)Lctj$a;
	METHOD g createBannerDrop (Lbpy;)Lctj$a;
	METHOD h createBeeNestDrop (Lbpy;)Lctj$a;
	METHOD i createBeeHiveDrop (Lbpy;)Lctj$a;
	METHOD j createGrassDrops (Lbpy;)Lctj$a;
	METHOD k lambda$dropPottedContents$75 (Lbpy;)Lctj$a;
	METHOD l lambda$accept$74 (Lbpy;)Lctj$a;
	METHOD m lambda$accept$73 (Lbpy;)Lctj$a;
	METHOD n lambda$accept$72 (Lbpy;)Lctj$a;
	METHOD o lambda$accept$71 (Lbpy;)Lctj$a;
	METHOD p lambda$accept$70 (Lbpy;)Lctj$a;
	METHOD q lambda$accept$69 (Lbpy;)Lctj$a;
	METHOD r lambda$accept$68 (Lbpy;)Lctj$a;
	METHOD s lambda$accept$67 (Lbpy;)Lctj$a;
	METHOD t lambda$accept$66 (Lbpy;)Lctj$a;
	METHOD u lambda$accept$65 (Lbpy;)Lctj$a;
	METHOD v lambda$accept$64 (Lbpy;)Lctj$a;
	METHOD w lambda$accept$63 (Lbpy;)Lctj$a;
	METHOD x lambda$accept$62 (Lbpy;)Lctj$a;
	METHOD y lambda$accept$61 (Lbpy;)Lctj$a;
	METHOD z lambda$accept$60 (Lbpy;)Lctj$a;
