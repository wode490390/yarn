CLASS cl net/minecraft/advancements/critereon/PlayerPredicate
	FIELD a ANY Lcl;
	FIELD b level Lce$d;
	FIELD c gameType Lbvo;
	FIELD d stats Ljava/util/Map;
	FIELD e recipes Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;
	FIELD f advancements Ljava/util/Map;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lce$d;Lbvo;Ljava/util/Map;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;)V
	METHOD <init> <init> (Lce$d;Lbvo;Ljava/util/Map;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;Lcl$1;)V
	METHOD a serializeToJson ()Lcom/google/gson/JsonElement;
	METHOD a getStatValueId (Lafd;)Lwp;
	METHOD a getStat (Laff;Lwp;)Lafd;
	METHOD a matches (Lasl;)Z
	METHOD a lambda$serializeToJson$1 (Lcom/google/gson/JsonArray;Lafd;Lce$d;)V
	METHOD a fromJson (Lcom/google/gson/JsonElement;)Lcl;
	METHOD a lambda$serializeToJson$3 (Lcom/google/gson/JsonObject;Lwp;Lcl$c;)V
	METHOD a lambda$serializeToJson$2 (Lcom/google/gson/JsonObject;Lwp;Ljava/lang/Boolean;)V
	METHOD a lambda$advancementPredicateFromJson$0 (Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map$Entry;)V
	METHOD b advancementPredicateFromJson (Lcom/google/gson/JsonElement;)Lcl$c;
	CLASS 1 1
	CLASS a AdvancementCriterionsPredicate
		FIELD a criterions Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;
		METHOD <init> <init> (Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;)V
		METHOD a toJson ()Lcom/google/gson/JsonElement;
		METHOD a test (Laf;)Z
		METHOD test test (Ljava/lang/Object;)Z
	CLASS b AdvancementDonePredicate
		FIELD a state Z
		METHOD <init> <init> (Z)V
		METHOD a toJson ()Lcom/google/gson/JsonElement;
		METHOD a test (Laf;)Z
		METHOD test test (Ljava/lang/Object;)Z
	CLASS c AdvancementPredicate
		METHOD a toJson ()Lcom/google/gson/JsonElement;
	CLASS d Builder
		FIELD a level Lce$d;
		FIELD b gameType Lbvo;
		FIELD c stats Ljava/util/Map;
		FIELD d recipes Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;
		FIELD e advancements Ljava/util/Map;
		METHOD <init> <init> ()V
		METHOD a player ()Lcl$d;
		METHOD a addStat (Lafd;Lce$d;)Lcl$d;
		METHOD a setGameType (Lbvo;)Lcl$d;
		METHOD a setLevel (Lce$d;)Lcl$d;
		METHOD a checkAdvancementCriterions (Lwp;Ljava/util/Map;)Lcl$d;
		METHOD a addRecipe (Lwp;Z)Lcl$d;
		METHOD b build ()Lcl;
		METHOD b checkAdvancementDone (Lwp;Z)Lcl$d;
