CLASS ags net/minecraft/util/Mth
	FIELD a PI F
	FIELD b HALF_PI F
	FIELD c TWO_PI F
	FIELD d DEG_TO_RAD F
	FIELD e RAD_TO_DEG F
	FIELD f EPSILON F
	FIELD g SQRT_OF_TWO F
	FIELD h BIG_ENOUGH_INT I
	FIELD i BIG_ENOUGH_FLOAT F
	FIELD j UUID_VERSION J
	FIELD k UUID_VERSION_TYPE_4 J
	FIELD l UUID_VARIANT J
	FIELD m UUID_VARIANT_2 J
	FIELD n SIN_SCALE F
	FIELD o SIN [F
	FIELD p RANDOM Ljava/util/Random;
	FIELD q MULTIPLY_DE_BRUIJN_BIT_POSITION [I
	FIELD r ONE_SIXTH D
	FIELD s FRAC_EXP I
	FIELD t LUT_SIZE I
	FIELD u FRAC_BIAS D
	FIELD v ASIN_TAB [D
	FIELD w COS_TAB [D
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> ()V
	METHOD a createInsecureUUID ()Ljava/util/UUID;
	METHOD a clamp (BBB)B
	METHOD a sqrt (D)F
	METHOD a absMax (DD)D
	METHOD a clamp (DDD)D
	METHOD a clampedMap (DDDDD)D
	METHOD a lerp2 (DDDDDD)D
	METHOD a lerp3 (DDDDDDDDDDD)D
	METHOD a binBiModalNormalDistribution (DDDDDDII)[D
	METHOD a binNormalDistribution (DDDII)[D
	METHOD a binLogDistribution (DDII)[D
	METHOD a sin (F)F
	METHOD a equal (FF)Z
	METHOD a clamp (FFF)F
	METHOD a abs (I)I
	METHOD a length (IDI)D
	METHOD a colorMultiply (IFFF)I
	METHOD a intFloorDiv (II)I
	METHOD a clamp (III)I
	METHOD a binarySearch (IILjava/util/function/IntPredicate;)I
	METHOD a murmurHash3Mixer (J)J
	METHOD a clamp (JJJ)J
	METHOD a rayIntersectsAABB (Ldly;Ldly;Ldlt;)Z
	METHOD a catmullRomSplinePos (Ldly;Ldly;Ldly;Ldly;D)Ldly;
	METHOD a getSeed (Lgw;)J
	METHOD a getDouble (Ljava/lang/String;D)D
	METHOD a getDouble (Ljava/lang/String;DD)D
	METHOD a getInt (Ljava/lang/String;I)I
	METHOD a getInt (Ljava/lang/String;II)I
	METHOD a createInsecureUUID (Ljava/util/Random;)Ljava/util/UUID;
	METHOD a nextDouble (Ljava/util/Random;DD)D
	METHOD a nextFloat (Ljava/util/Random;FF)F
	METHOD a nextInt (Ljava/util/Random;II)I
	METHOD a getRandomForDistributionIntegral (Ljava/util/Random;[D)I
	METHOD a cumulativeSum ([D)[D
	METHOD a lambda$static$0 ([F)V
	METHOD a average ([J)D
	METHOD b fastFloor (D)I
	METHOD b equal (DD)Z
	METHOD b clampedLerp (DDD)D
	METHOD b map (DDDDD)D
	METHOD b cos (F)F
	METHOD b positiveModulo (FF)F
	METHOD b rotateIfNecessary (FFF)F
	METHOD b wrapDegrees (I)I
	METHOD b positiveModulo (II)I
	METHOD b color (III)I
	METHOD b randomBetween (Ljava/util/Random;FF)F
	METHOD b randomBetweenInclusive (Ljava/util/Random;II)I
	METHOD c floor (D)I
	METHOD c positiveModulo (DD)D
	METHOD c inverseLerp (DDD)D
	METHOD c sqrt (F)F
	METHOD c degreesDifference (FF)F
	METHOD c approach (FFF)F
	METHOD c smallestEncompassingPowerOfTwo (I)I
	METHOD c colorMultiply (II)I
	METHOD c getSeed (III)J
	METHOD c normal (Ljava/util/Random;FF)F
	METHOD d lfloor (D)J
	METHOD d atan2 (DD)D
	METHOD d lerp (DDD)D
	METHOD d floor (F)I
	METHOD d degreesDifferenceAbs (FF)F
	METHOD d approachDegrees (FFF)F
	METHOD d isPowerOfTwo (I)Z
	METHOD d roundToward (II)I
	METHOD e absFloor (D)I
	METHOD e abs (F)F
	METHOD e triangleWave (FF)F
	METHOD e color (FFF)I
	METHOD e ceillog2 (I)I
	METHOD f ceil (D)I
	METHOD f ceil (F)I
	METHOD f hsvToRgb (FFF)I
	METHOD f log2 (I)I
	METHOD g wrapDegrees (D)D
	METHOD g wrapDegrees (F)F
	METHOD g lerp (FFF)F
	METHOD g murmurHash3Mixer (I)I
	METHOD h frac (D)D
	METHOD h frac (F)F
	METHOD h rotLerp (FFF)F
	METHOD h square (I)I
	METHOD i fastInvSqrt (D)D
	METHOD i fastInvSqrt (F)F
	METHOD i diffuseLight (FFF)F
	METHOD j smoothstep (D)D
	METHOD j fastInvCubeRoot (F)F
	METHOD j rotlerp (FFF)F
	METHOD k smoothstepDerivative (D)D
	METHOD k square (F)F
	METHOD l sign (D)I
	METHOD m rotWrap (D)F
	METHOD n square (D)D
	METHOD o wobble (D)D
