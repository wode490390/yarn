CLASS akw net/minecraft/util/datafix/fixes/LeavesFix
	FIELD a NORTH_WEST_MASK I
	FIELD b WEST_MASK I
	FIELD c SOUTH_WEST_MASK I
	FIELD d SOUTH_MASK I
	FIELD e SOUTH_EAST_MASK I
	FIELD f EAST_MASK I
	FIELD g NORTH_EAST_MASK I
	FIELD h NORTH_MASK I
	FIELD i DIRECTIONS [[I
	FIELD j DECAY_DISTANCE I
	FIELD k SIZE_BITS I
	FIELD l SIZE I
	FIELD m LEAVES Lit/unimi/dsi/fastutil/objects/Object2IntMap;
	FIELD n LOGS Ljava/util/Set;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lcom/mojang/datafixers/schemas/Schema;Z)V
	METHOD a access$000 ()Lit/unimi/dsi/fastutil/objects/Object2IntMap;
	METHOD a getX (I)I
	METHOD a getIndex (III)I
	METHOD a lambda$null$2 (Lakw$a;)Lakw$a;
	METHOD a lambda$makeRule$7 (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;
	METHOD a lambda$null$6 (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;
	METHOD a lambda$null$4 (Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;
	METHOD a lambda$null$1 (Lcom/mojang/datafixers/Typed;)Lakw$a;
	METHOD a lambda$null$3 (Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;
	METHOD a lambda$static$0 (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V
	METHOD a getSideMask (ZZZZ)I
	METHOD a lambda$null$5 ([ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;
	METHOD b access$100 ()Ljava/util/Set;
	METHOD b getY (I)I
	METHOD c getZ (I)I
	METHOD makeRule makeRule ()Lcom/mojang/datafixers/TypeRewriteRule;
	CLASS a LeavesSection
		FIELD h PERSISTENT Ljava/lang/String;
		FIELD i DECAYABLE Ljava/lang/String;
		FIELD j DISTANCE Ljava/lang/String;
		FIELD k leaveIds Lit/unimi/dsi/fastutil/ints/IntSet;
		FIELD l logIds Lit/unimi/dsi/fastutil/ints/IntSet;
		FIELD m stateToIdMap Lit/unimi/dsi/fastutil/ints/Int2IntMap;
		METHOD <init> <init> (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V
		METHOD a skippable ()Z
		METHOD a isLog (I)Z
		METHOD a setDistance (III)V
		METHOD a access$200 (Lakw$a;I)I
		METHOD a access$300 (Lakw$a;III)V
		METHOD a makeLeafTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic;
		METHOD b isLeaf (I)Z
		METHOD d getDistance (I)I
	CLASS b Section
		FIELD a BLOCK_STATES_TAG Ljava/lang/String;
		FIELD b NAME_TAG Ljava/lang/String;
		FIELD c PROPERTIES_TAG Ljava/lang/String;
		FIELD d paletteFinder Lcom/mojang/datafixers/OpticFinder;
		FIELD e palette Ljava/util/List;
		FIELD f index I
		FIELD g storage Lahj;
		FIELD h blockStateType Lcom/mojang/datafixers/types/Type;
		METHOD <init> <init> (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V
		METHOD a skippable ()Z
		METHOD a write (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;
		METHOD a readStorage (Lcom/mojang/serialization/Dynamic;)V
		METHOD a getStateId (Ljava/lang/String;ZI)I
		METHOD a lambda$new$0 (Ljava/util/List;)Ljava/util/List;
		METHOD b isSkippable ()Z
		METHOD b lambda$write$2 (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;
		METHOD c getIndex ()I
		METHOD c getBlock (I)I
		METHOD c lambda$write$1 (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;
