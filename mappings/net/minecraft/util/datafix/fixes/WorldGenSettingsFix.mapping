CLASS ams net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	FIELD a VILLAGE Ljava/lang/String;
	FIELD b DESERT_PYRAMID Ljava/lang/String;
	FIELD c IGLOO Ljava/lang/String;
	FIELD d JUNGLE_TEMPLE Ljava/lang/String;
	FIELD e SWAMP_HUT Ljava/lang/String;
	FIELD f PILLAGER_OUTPOST Ljava/lang/String;
	FIELD g END_CITY Ljava/lang/String;
	FIELD h WOODLAND_MANSION Ljava/lang/String;
	FIELD i OCEAN_MONUMENT Ljava/lang/String;
	FIELD j DEFAULTS Lcom/google/common/collect/ImmutableMap;
	METHOD <clinit> <clinit> ()V
	METHOD <init> <init> (Lcom/mojang/datafixers/schemas/Schema;)V
	METHOD a noise (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;
	METHOD a lambda$fix$6 (Lcom/google/common/collect/ImmutableMap$Builder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)V
	METHOD a lambda$makeRule$0 (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;
	METHOD a fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;
	METHOD a defaultOverworld (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;
	METHOD a vanillaLevels (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object;
	METHOD a vanillaBiomeSource (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic;
	METHOD a lambda$null$7 (Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V
	METHOD a lambda$null$8 (Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V
	METHOD a fixFlatStructures (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map;
	METHOD a lambda$fixFlatStructures$12 (Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;
	METHOD a lambda$fixFlatStructures$11 (Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;
	METHOD a lambda$fix$1 (Ljava/lang/String;)Ljava/lang/String;
	METHOD a getInt (Ljava/lang/String;I)I
	METHOD a getInt (Ljava/lang/String;II)I
	METHOD a setSpacing (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V
	METHOD a lambda$fix$2 (Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;
	METHOD a lambda$null$9 (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V
	METHOD a lambda$fixFlatStructures$10 (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V
	METHOD b lambda$fix$5 (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;
	METHOD c lambda$fix$4 (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;
	METHOD d lambda$fix$3 (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;
	METHOD makeRule makeRule ()Lcom/mojang/datafixers/TypeRewriteRule;
	CLASS a StructureFeatureConfiguration
		FIELD a CODEC Lcom/mojang/serialization/Codec;
		FIELD b spacing I
		FIELD c separation I
		FIELD d salt I
		METHOD <clinit> <clinit> ()V
		METHOD <init> <init> (III)V
		METHOD a access$000 (Lams$a;)I
		METHOD a serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;
		METHOD a lambda$static$3 (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;
		METHOD b access$100 (Lams$a;)I
		METHOD c access$200 (Lams$a;)I
		METHOD d lambda$null$2 (Lams$a;)Ljava/lang/Integer;
		METHOD e lambda$null$1 (Lams$a;)Ljava/lang/Integer;
		METHOD f lambda$null$0 (Lams$a;)Ljava/lang/Integer;
